/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3099.0, "minX": 0.0, "maxY": 42054.0, "series": [{"data": [[0.0, 17700.0], [0.1, 17700.0], [0.2, 17700.0], [0.3, 17700.0], [0.4, 17700.0], [0.5, 17700.0], [0.6, 17700.0], [0.7, 17700.0], [0.8, 17700.0], [0.9, 17700.0], [1.0, 19151.0], [1.1, 19151.0], [1.2, 19151.0], [1.3, 19151.0], [1.4, 19151.0], [1.5, 19151.0], [1.6, 19151.0], [1.7, 19151.0], [1.8, 19151.0], [1.9, 19151.0], [2.0, 19646.0], [2.1, 19646.0], [2.2, 19646.0], [2.3, 19646.0], [2.4, 19646.0], [2.5, 19646.0], [2.6, 19646.0], [2.7, 19646.0], [2.8, 19646.0], [2.9, 19646.0], [3.0, 20483.0], [3.1, 20483.0], [3.2, 20483.0], [3.3, 20483.0], [3.4, 20483.0], [3.5, 20483.0], [3.6, 20483.0], [3.7, 20483.0], [3.8, 20483.0], [3.9, 20483.0], [4.0, 21293.0], [4.1, 21293.0], [4.2, 21293.0], [4.3, 21293.0], [4.4, 21293.0], [4.5, 21293.0], [4.6, 21293.0], [4.7, 21293.0], [4.8, 21293.0], [4.9, 21293.0], [5.0, 21410.0], [5.1, 21410.0], [5.2, 21410.0], [5.3, 21410.0], [5.4, 21410.0], [5.5, 21410.0], [5.6, 21410.0], [5.7, 21410.0], [5.8, 21410.0], [5.9, 21410.0], [6.0, 21710.0], [6.1, 21710.0], [6.2, 21710.0], [6.3, 21710.0], [6.4, 21710.0], [6.5, 21710.0], [6.6, 21710.0], [6.7, 21710.0], [6.8, 21710.0], [6.9, 21710.0], [7.0, 22019.0], [7.1, 22019.0], [7.2, 22019.0], [7.3, 22019.0], [7.4, 22019.0], [7.5, 22019.0], [7.6, 22019.0], [7.7, 22019.0], [7.8, 22019.0], [7.9, 22019.0], [8.0, 22035.0], [8.1, 22035.0], [8.2, 22035.0], [8.3, 22035.0], [8.4, 22035.0], [8.5, 22035.0], [8.6, 22035.0], [8.7, 22035.0], [8.8, 22035.0], [8.9, 22035.0], [9.0, 22058.0], [9.1, 22058.0], [9.2, 22058.0], [9.3, 22058.0], [9.4, 22058.0], [9.5, 22058.0], [9.6, 22058.0], [9.7, 22058.0], [9.8, 22058.0], [9.9, 22058.0], [10.0, 22152.0], [10.1, 22152.0], [10.2, 22152.0], [10.3, 22152.0], [10.4, 22152.0], [10.5, 22152.0], [10.6, 22152.0], [10.7, 22152.0], [10.8, 22152.0], [10.9, 22152.0], [11.0, 22210.0], [11.1, 22210.0], [11.2, 22210.0], [11.3, 22210.0], [11.4, 22210.0], [11.5, 22210.0], [11.6, 22210.0], [11.7, 22210.0], [11.8, 22210.0], [11.9, 22210.0], [12.0, 22254.0], [12.1, 22254.0], [12.2, 22254.0], [12.3, 22254.0], [12.4, 22254.0], [12.5, 22254.0], [12.6, 22254.0], [12.7, 22254.0], [12.8, 22254.0], [12.9, 22254.0], [13.0, 22560.0], [13.1, 22560.0], [13.2, 22560.0], [13.3, 22560.0], [13.4, 22560.0], [13.5, 22560.0], [13.6, 22560.0], [13.7, 22560.0], [13.8, 22560.0], [13.9, 22560.0], [14.0, 22868.0], [14.1, 22868.0], [14.2, 22868.0], [14.3, 22868.0], [14.4, 22868.0], [14.5, 22868.0], [14.6, 22868.0], [14.7, 22868.0], [14.8, 22868.0], [14.9, 22868.0], [15.0, 23129.0], [15.1, 23129.0], [15.2, 23129.0], [15.3, 23129.0], [15.4, 23129.0], [15.5, 23129.0], [15.6, 23129.0], [15.7, 23129.0], [15.8, 23129.0], [15.9, 23129.0], [16.0, 23303.0], [16.1, 23303.0], [16.2, 23303.0], [16.3, 23303.0], [16.4, 23303.0], [16.5, 23303.0], [16.6, 23303.0], [16.7, 23303.0], [16.8, 23303.0], [16.9, 23303.0], [17.0, 23707.0], [17.1, 23707.0], [17.2, 23707.0], [17.3, 23707.0], [17.4, 23707.0], [17.5, 23707.0], [17.6, 23707.0], [17.7, 23707.0], [17.8, 23707.0], [17.9, 23707.0], [18.0, 24406.0], [18.1, 24406.0], [18.2, 24406.0], [18.3, 24406.0], [18.4, 24406.0], [18.5, 24406.0], [18.6, 24406.0], [18.7, 24406.0], [18.8, 24406.0], [18.9, 24406.0], [19.0, 24551.0], [19.1, 24551.0], [19.2, 24551.0], [19.3, 24551.0], [19.4, 24551.0], [19.5, 24551.0], [19.6, 24551.0], [19.7, 24551.0], [19.8, 24551.0], [19.9, 24551.0], [20.0, 24725.0], [20.1, 24725.0], [20.2, 24725.0], [20.3, 24725.0], [20.4, 24725.0], [20.5, 24725.0], [20.6, 24725.0], [20.7, 24725.0], [20.8, 24725.0], [20.9, 24725.0], [21.0, 24766.0], [21.1, 24766.0], [21.2, 24766.0], [21.3, 24766.0], [21.4, 24766.0], [21.5, 24766.0], [21.6, 24766.0], [21.7, 24766.0], [21.8, 24766.0], [21.9, 24766.0], [22.0, 25208.0], [22.1, 25208.0], [22.2, 25208.0], [22.3, 25208.0], [22.4, 25208.0], [22.5, 25208.0], [22.6, 25208.0], [22.7, 25208.0], [22.8, 25208.0], [22.9, 25208.0], [23.0, 25493.0], [23.1, 25493.0], [23.2, 25493.0], [23.3, 25493.0], [23.4, 25493.0], [23.5, 25493.0], [23.6, 25493.0], [23.7, 25493.0], [23.8, 25493.0], [23.9, 25493.0], [24.0, 25989.0], [24.1, 25989.0], [24.2, 25989.0], [24.3, 25989.0], [24.4, 25989.0], [24.5, 25989.0], [24.6, 25989.0], [24.7, 25989.0], [24.8, 25989.0], [24.9, 25989.0], [25.0, 26642.0], [25.1, 26642.0], [25.2, 26642.0], [25.3, 26642.0], [25.4, 26642.0], [25.5, 26642.0], [25.6, 26642.0], [25.7, 26642.0], [25.8, 26642.0], [25.9, 26642.0], [26.0, 26753.0], [26.1, 26753.0], [26.2, 26753.0], [26.3, 26753.0], [26.4, 26753.0], [26.5, 26753.0], [26.6, 26753.0], [26.7, 26753.0], [26.8, 26753.0], [26.9, 26753.0], [27.0, 27214.0], [27.1, 27214.0], [27.2, 27214.0], [27.3, 27214.0], [27.4, 27214.0], [27.5, 27214.0], [27.6, 27214.0], [27.7, 27214.0], [27.8, 27214.0], [27.9, 27214.0], [28.0, 27218.0], [28.1, 27218.0], [28.2, 27218.0], [28.3, 27218.0], [28.4, 27218.0], [28.5, 27218.0], [28.6, 27218.0], [28.7, 27218.0], [28.8, 27218.0], [28.9, 27218.0], [29.0, 27359.0], [29.1, 27359.0], [29.2, 27359.0], [29.3, 27359.0], [29.4, 27359.0], [29.5, 27359.0], [29.6, 27359.0], [29.7, 27359.0], [29.8, 27359.0], [29.9, 27359.0], [30.0, 27516.0], [30.1, 27516.0], [30.2, 27516.0], [30.3, 27516.0], [30.4, 27516.0], [30.5, 27516.0], [30.6, 27516.0], [30.7, 27516.0], [30.8, 27516.0], [30.9, 27516.0], [31.0, 27953.0], [31.1, 27953.0], [31.2, 27953.0], [31.3, 27953.0], [31.4, 27953.0], [31.5, 27953.0], [31.6, 27953.0], [31.7, 27953.0], [31.8, 27953.0], [31.9, 27953.0], [32.0, 28238.0], [32.1, 28238.0], [32.2, 28238.0], [32.3, 28238.0], [32.4, 28238.0], [32.5, 28238.0], [32.6, 28238.0], [32.7, 28238.0], [32.8, 28238.0], [32.9, 28238.0], [33.0, 28380.0], [33.1, 28380.0], [33.2, 28380.0], [33.3, 28380.0], [33.4, 28380.0], [33.5, 28380.0], [33.6, 28380.0], [33.7, 28380.0], [33.8, 28380.0], [33.9, 28380.0], [34.0, 28445.0], [34.1, 28445.0], [34.2, 28445.0], [34.3, 28445.0], [34.4, 28445.0], [34.5, 28445.0], [34.6, 28445.0], [34.7, 28445.0], [34.8, 28445.0], [34.9, 28445.0], [35.0, 28706.0], [35.1, 28706.0], [35.2, 28706.0], [35.3, 28706.0], [35.4, 28706.0], [35.5, 28706.0], [35.6, 28706.0], [35.7, 28706.0], [35.8, 28706.0], [35.9, 28706.0], [36.0, 28710.0], [36.1, 28710.0], [36.2, 28710.0], [36.3, 28710.0], [36.4, 28710.0], [36.5, 28710.0], [36.6, 28710.0], [36.7, 28710.0], [36.8, 28710.0], [36.9, 28710.0], [37.0, 29259.0], [37.1, 29259.0], [37.2, 29259.0], [37.3, 29259.0], [37.4, 29259.0], [37.5, 29259.0], [37.6, 29259.0], [37.7, 29259.0], [37.8, 29259.0], [37.9, 29259.0], [38.0, 29977.0], [38.1, 29977.0], [38.2, 29977.0], [38.3, 29977.0], [38.4, 29977.0], [38.5, 29977.0], [38.6, 29977.0], [38.7, 29977.0], [38.8, 29977.0], [38.9, 29977.0], [39.0, 30210.0], [39.1, 30210.0], [39.2, 30210.0], [39.3, 30210.0], [39.4, 30210.0], [39.5, 30210.0], [39.6, 30210.0], [39.7, 30210.0], [39.8, 30210.0], [39.9, 30210.0], [40.0, 30603.0], [40.1, 30603.0], [40.2, 30603.0], [40.3, 30603.0], [40.4, 30603.0], [40.5, 30603.0], [40.6, 30603.0], [40.7, 30603.0], [40.8, 30603.0], [40.9, 30603.0], [41.0, 30669.0], [41.1, 30669.0], [41.2, 30669.0], [41.3, 30669.0], [41.4, 30669.0], [41.5, 30669.0], [41.6, 30669.0], [41.7, 30669.0], [41.8, 30669.0], [41.9, 30669.0], [42.0, 31233.0], [42.1, 31233.0], [42.2, 31233.0], [42.3, 31233.0], [42.4, 31233.0], [42.5, 31233.0], [42.6, 31233.0], [42.7, 31233.0], [42.8, 31233.0], [42.9, 31233.0], [43.0, 31289.0], [43.1, 31289.0], [43.2, 31289.0], [43.3, 31289.0], [43.4, 31289.0], [43.5, 31289.0], [43.6, 31289.0], [43.7, 31289.0], [43.8, 31289.0], [43.9, 31289.0], [44.0, 31308.0], [44.1, 31308.0], [44.2, 31308.0], [44.3, 31308.0], [44.4, 31308.0], [44.5, 31308.0], [44.6, 31308.0], [44.7, 31308.0], [44.8, 31308.0], [44.9, 31308.0], [45.0, 31341.0], [45.1, 31341.0], [45.2, 31341.0], [45.3, 31341.0], [45.4, 31341.0], [45.5, 31341.0], [45.6, 31341.0], [45.7, 31341.0], [45.8, 31341.0], [45.9, 31341.0], [46.0, 31345.0], [46.1, 31345.0], [46.2, 31345.0], [46.3, 31345.0], [46.4, 31345.0], [46.5, 31345.0], [46.6, 31345.0], [46.7, 31345.0], [46.8, 31345.0], [46.9, 31345.0], [47.0, 31695.0], [47.1, 31695.0], [47.2, 31695.0], [47.3, 31695.0], [47.4, 31695.0], [47.5, 31695.0], [47.6, 31695.0], [47.7, 31695.0], [47.8, 31695.0], [47.9, 31695.0], [48.0, 31984.0], [48.1, 31984.0], [48.2, 31984.0], [48.3, 31984.0], [48.4, 31984.0], [48.5, 31984.0], [48.6, 31984.0], [48.7, 31984.0], [48.8, 31984.0], [48.9, 31984.0], [49.0, 32038.0], [49.1, 32038.0], [49.2, 32038.0], [49.3, 32038.0], [49.4, 32038.0], [49.5, 32038.0], [49.6, 32038.0], [49.7, 32038.0], [49.8, 32038.0], [49.9, 32038.0], [50.0, 32645.0], [50.1, 32645.0], [50.2, 32645.0], [50.3, 32645.0], [50.4, 32645.0], [50.5, 32645.0], [50.6, 32645.0], [50.7, 32645.0], [50.8, 32645.0], [50.9, 32645.0], [51.0, 32769.0], [51.1, 32769.0], [51.2, 32769.0], [51.3, 32769.0], [51.4, 32769.0], [51.5, 32769.0], [51.6, 32769.0], [51.7, 32769.0], [51.8, 32769.0], [51.9, 32769.0], [52.0, 32912.0], [52.1, 32912.0], [52.2, 32912.0], [52.3, 32912.0], [52.4, 32912.0], [52.5, 32912.0], [52.6, 32912.0], [52.7, 32912.0], [52.8, 32912.0], [52.9, 32912.0], [53.0, 33331.0], [53.1, 33331.0], [53.2, 33331.0], [53.3, 33331.0], [53.4, 33331.0], [53.5, 33331.0], [53.6, 33331.0], [53.7, 33331.0], [53.8, 33331.0], [53.9, 33331.0], [54.0, 33527.0], [54.1, 33527.0], [54.2, 33527.0], [54.3, 33527.0], [54.4, 33527.0], [54.5, 33527.0], [54.6, 33527.0], [54.7, 33527.0], [54.8, 33527.0], [54.9, 33527.0], [55.0, 33694.0], [55.1, 33694.0], [55.2, 33694.0], [55.3, 33694.0], [55.4, 33694.0], [55.5, 33694.0], [55.6, 33694.0], [55.7, 33694.0], [55.8, 33694.0], [55.9, 33694.0], [56.0, 33710.0], [56.1, 33710.0], [56.2, 33710.0], [56.3, 33710.0], [56.4, 33710.0], [56.5, 33710.0], [56.6, 33710.0], [56.7, 33710.0], [56.8, 33710.0], [56.9, 33710.0], [57.0, 33750.0], [57.1, 33750.0], [57.2, 33750.0], [57.3, 33750.0], [57.4, 33750.0], [57.5, 33750.0], [57.6, 33750.0], [57.7, 33750.0], [57.8, 33750.0], [57.9, 33750.0], [58.0, 33790.0], [58.1, 33790.0], [58.2, 33790.0], [58.3, 33790.0], [58.4, 33790.0], [58.5, 33790.0], [58.6, 33790.0], [58.7, 33790.0], [58.8, 33790.0], [58.9, 33790.0], [59.0, 33829.0], [59.1, 33829.0], [59.2, 33829.0], [59.3, 33829.0], [59.4, 33829.0], [59.5, 33829.0], [59.6, 33829.0], [59.7, 33829.0], [59.8, 33829.0], [59.9, 33829.0], [60.0, 34022.0], [60.1, 34022.0], [60.2, 34022.0], [60.3, 34022.0], [60.4, 34022.0], [60.5, 34022.0], [60.6, 34022.0], [60.7, 34022.0], [60.8, 34022.0], [60.9, 34022.0], [61.0, 34162.0], [61.1, 34162.0], [61.2, 34162.0], [61.3, 34162.0], [61.4, 34162.0], [61.5, 34162.0], [61.6, 34162.0], [61.7, 34162.0], [61.8, 34162.0], [61.9, 34162.0], [62.0, 34383.0], [62.1, 34383.0], [62.2, 34383.0], [62.3, 34383.0], [62.4, 34383.0], [62.5, 34383.0], [62.6, 34383.0], [62.7, 34383.0], [62.8, 34383.0], [62.9, 34383.0], [63.0, 34822.0], [63.1, 34822.0], [63.2, 34822.0], [63.3, 34822.0], [63.4, 34822.0], [63.5, 34822.0], [63.6, 34822.0], [63.7, 34822.0], [63.8, 34822.0], [63.9, 34822.0], [64.0, 35298.0], [64.1, 35298.0], [64.2, 35298.0], [64.3, 35298.0], [64.4, 35298.0], [64.5, 35298.0], [64.6, 35298.0], [64.7, 35298.0], [64.8, 35298.0], [64.9, 35298.0], [65.0, 35552.0], [65.1, 35552.0], [65.2, 35552.0], [65.3, 35552.0], [65.4, 35552.0], [65.5, 35552.0], [65.6, 35552.0], [65.7, 35552.0], [65.8, 35552.0], [65.9, 35552.0], [66.0, 35764.0], [66.1, 35764.0], [66.2, 35764.0], [66.3, 35764.0], [66.4, 35764.0], [66.5, 35764.0], [66.6, 35764.0], [66.7, 35764.0], [66.8, 35764.0], [66.9, 35764.0], [67.0, 36138.0], [67.1, 36138.0], [67.2, 36138.0], [67.3, 36138.0], [67.4, 36138.0], [67.5, 36138.0], [67.6, 36138.0], [67.7, 36138.0], [67.8, 36138.0], [67.9, 36138.0], [68.0, 36633.0], [68.1, 36633.0], [68.2, 36633.0], [68.3, 36633.0], [68.4, 36633.0], [68.5, 36633.0], [68.6, 36633.0], [68.7, 36633.0], [68.8, 36633.0], [68.9, 36633.0], [69.0, 36634.0], [69.1, 36634.0], [69.2, 36634.0], [69.3, 36634.0], [69.4, 36634.0], [69.5, 36634.0], [69.6, 36634.0], [69.7, 36634.0], [69.8, 36634.0], [69.9, 36634.0], [70.0, 36988.0], [70.1, 36988.0], [70.2, 36988.0], [70.3, 36988.0], [70.4, 36988.0], [70.5, 36988.0], [70.6, 36988.0], [70.7, 36988.0], [70.8, 36988.0], [70.9, 36988.0], [71.0, 37630.0], [71.1, 37630.0], [71.2, 37630.0], [71.3, 37630.0], [71.4, 37630.0], [71.5, 37630.0], [71.6, 37630.0], [71.7, 37630.0], [71.8, 37630.0], [71.9, 37630.0], [72.0, 37854.0], [72.1, 37854.0], [72.2, 37854.0], [72.3, 37854.0], [72.4, 37854.0], [72.5, 37854.0], [72.6, 37854.0], [72.7, 37854.0], [72.8, 37854.0], [72.9, 37854.0], [73.0, 37962.0], [73.1, 37962.0], [73.2, 37962.0], [73.3, 37962.0], [73.4, 37962.0], [73.5, 37962.0], [73.6, 37962.0], [73.7, 37962.0], [73.8, 37962.0], [73.9, 37962.0], [74.0, 38274.0], [74.1, 38274.0], [74.2, 38274.0], [74.3, 38274.0], [74.4, 38274.0], [74.5, 38274.0], [74.6, 38274.0], [74.7, 38274.0], [74.8, 38274.0], [74.9, 38274.0], [75.0, 38509.0], [75.1, 38509.0], [75.2, 38509.0], [75.3, 38509.0], [75.4, 38509.0], [75.5, 38509.0], [75.6, 38509.0], [75.7, 38509.0], [75.8, 38509.0], [75.9, 38509.0], [76.0, 38801.0], [76.1, 38801.0], [76.2, 38801.0], [76.3, 38801.0], [76.4, 38801.0], [76.5, 38801.0], [76.6, 38801.0], [76.7, 38801.0], [76.8, 38801.0], [76.9, 38801.0], [77.0, 39053.0], [77.1, 39053.0], [77.2, 39053.0], [77.3, 39053.0], [77.4, 39053.0], [77.5, 39053.0], [77.6, 39053.0], [77.7, 39053.0], [77.8, 39053.0], [77.9, 39053.0], [78.0, 39090.0], [78.1, 39090.0], [78.2, 39090.0], [78.3, 39090.0], [78.4, 39090.0], [78.5, 39090.0], [78.6, 39090.0], [78.7, 39090.0], [78.8, 39090.0], [78.9, 39090.0], [79.0, 39100.0], [79.1, 39100.0], [79.2, 39100.0], [79.3, 39100.0], [79.4, 39100.0], [79.5, 39100.0], [79.6, 39100.0], [79.7, 39100.0], [79.8, 39100.0], [79.9, 39100.0], [80.0, 39407.0], [80.1, 39407.0], [80.2, 39407.0], [80.3, 39407.0], [80.4, 39407.0], [80.5, 39407.0], [80.6, 39407.0], [80.7, 39407.0], [80.8, 39407.0], [80.9, 39407.0], [81.0, 39461.0], [81.1, 39461.0], [81.2, 39461.0], [81.3, 39461.0], [81.4, 39461.0], [81.5, 39461.0], [81.6, 39461.0], [81.7, 39461.0], [81.8, 39461.0], [81.9, 39461.0], [82.0, 39487.0], [82.1, 39487.0], [82.2, 39487.0], [82.3, 39487.0], [82.4, 39487.0], [82.5, 39487.0], [82.6, 39487.0], [82.7, 39487.0], [82.8, 39487.0], [82.9, 39487.0], [83.0, 39595.0], [83.1, 39595.0], [83.2, 39595.0], [83.3, 39595.0], [83.4, 39595.0], [83.5, 39595.0], [83.6, 39595.0], [83.7, 39595.0], [83.8, 39595.0], [83.9, 39595.0], [84.0, 39767.0], [84.1, 39767.0], [84.2, 39767.0], [84.3, 39767.0], [84.4, 39767.0], [84.5, 39767.0], [84.6, 39767.0], [84.7, 39767.0], [84.8, 39767.0], [84.9, 39767.0], [85.0, 39806.0], [85.1, 39806.0], [85.2, 39806.0], [85.3, 39806.0], [85.4, 39806.0], [85.5, 39806.0], [85.6, 39806.0], [85.7, 39806.0], [85.8, 39806.0], [85.9, 39806.0], [86.0, 39951.0], [86.1, 39951.0], [86.2, 39951.0], [86.3, 39951.0], [86.4, 39951.0], [86.5, 39951.0], [86.6, 39951.0], [86.7, 39951.0], [86.8, 39951.0], [86.9, 39951.0], [87.0, 39999.0], [87.1, 39999.0], [87.2, 39999.0], [87.3, 39999.0], [87.4, 39999.0], [87.5, 39999.0], [87.6, 39999.0], [87.7, 39999.0], [87.8, 39999.0], [87.9, 39999.0], [88.0, 40227.0], [88.1, 40227.0], [88.2, 40227.0], [88.3, 40227.0], [88.4, 40227.0], [88.5, 40227.0], [88.6, 40227.0], [88.7, 40227.0], [88.8, 40227.0], [88.9, 40227.0], [89.0, 40245.0], [89.1, 40245.0], [89.2, 40245.0], [89.3, 40245.0], [89.4, 40245.0], [89.5, 40245.0], [89.6, 40245.0], [89.7, 40245.0], [89.8, 40245.0], [89.9, 40245.0], [90.0, 40259.0], [90.1, 40259.0], [90.2, 40259.0], [90.3, 40259.0], [90.4, 40259.0], [90.5, 40259.0], [90.6, 40259.0], [90.7, 40259.0], [90.8, 40259.0], [90.9, 40259.0], [91.0, 40444.0], [91.1, 40444.0], [91.2, 40444.0], [91.3, 40444.0], [91.4, 40444.0], [91.5, 40444.0], [91.6, 40444.0], [91.7, 40444.0], [91.8, 40444.0], [91.9, 40444.0], [92.0, 40556.0], [92.1, 40556.0], [92.2, 40556.0], [92.3, 40556.0], [92.4, 40556.0], [92.5, 40556.0], [92.6, 40556.0], [92.7, 40556.0], [92.8, 40556.0], [92.9, 40556.0], [93.0, 40576.0], [93.1, 40576.0], [93.2, 40576.0], [93.3, 40576.0], [93.4, 40576.0], [93.5, 40576.0], [93.6, 40576.0], [93.7, 40576.0], [93.8, 40576.0], [93.9, 40576.0], [94.0, 40763.0], [94.1, 40763.0], [94.2, 40763.0], [94.3, 40763.0], [94.4, 40763.0], [94.5, 40763.0], [94.6, 40763.0], [94.7, 40763.0], [94.8, 40763.0], [94.9, 40763.0], [95.0, 40777.0], [95.1, 40777.0], [95.2, 40777.0], [95.3, 40777.0], [95.4, 40777.0], [95.5, 40777.0], [95.6, 40777.0], [95.7, 40777.0], [95.8, 40777.0], [95.9, 40777.0], [96.0, 41053.0], [96.1, 41053.0], [96.2, 41053.0], [96.3, 41053.0], [96.4, 41053.0], [96.5, 41053.0], [96.6, 41053.0], [96.7, 41053.0], [96.8, 41053.0], [96.9, 41053.0], [97.0, 41163.0], [97.1, 41163.0], [97.2, 41163.0], [97.3, 41163.0], [97.4, 41163.0], [97.5, 41163.0], [97.6, 41163.0], [97.7, 41163.0], [97.8, 41163.0], [97.9, 41163.0], [98.0, 41612.0], [98.1, 41612.0], [98.2, 41612.0], [98.3, 41612.0], [98.4, 41612.0], [98.5, 41612.0], [98.6, 41612.0], [98.7, 41612.0], [98.8, 41612.0], [98.9, 41612.0], [99.0, 42054.0], [99.1, 42054.0], [99.2, 42054.0], [99.3, 42054.0], [99.4, 42054.0], [99.5, 42054.0], [99.6, 42054.0], [99.7, 42054.0], [99.8, 42054.0], [99.9, 42054.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 3483.0], [0.1, 3483.0], [0.2, 3483.0], [0.3, 3483.0], [0.4, 3483.0], [0.5, 3483.0], [0.6, 3483.0], [0.7, 3483.0], [0.8, 3483.0], [0.9, 3483.0], [1.0, 3490.0], [1.1, 3490.0], [1.2, 3490.0], [1.3, 3490.0], [1.4, 3490.0], [1.5, 3490.0], [1.6, 3490.0], [1.7, 3490.0], [1.8, 3490.0], [1.9, 3490.0], [2.0, 3495.0], [2.1, 3495.0], [2.2, 3495.0], [2.3, 3495.0], [2.4, 3495.0], [2.5, 3495.0], [2.6, 3495.0], [2.7, 3495.0], [2.8, 3495.0], [2.9, 3495.0], [3.0, 3506.0], [3.1, 3506.0], [3.2, 3506.0], [3.3, 3506.0], [3.4, 3506.0], [3.5, 3506.0], [3.6, 3506.0], [3.7, 3506.0], [3.8, 3506.0], [3.9, 3506.0], [4.0, 3516.0], [4.1, 3516.0], [4.2, 3516.0], [4.3, 3516.0], [4.4, 3516.0], [4.5, 3516.0], [4.6, 3516.0], [4.7, 3516.0], [4.8, 3516.0], [4.9, 3516.0], [5.0, 3520.0], [5.1, 3520.0], [5.2, 3520.0], [5.3, 3520.0], [5.4, 3520.0], [5.5, 3520.0], [5.6, 3520.0], [5.7, 3520.0], [5.8, 3520.0], [5.9, 3520.0], [6.0, 3538.0], [6.1, 3538.0], [6.2, 3538.0], [6.3, 3538.0], [6.4, 3538.0], [6.5, 3538.0], [6.6, 3538.0], [6.7, 3538.0], [6.8, 3538.0], [6.9, 3538.0], [7.0, 3550.0], [7.1, 3550.0], [7.2, 3550.0], [7.3, 3550.0], [7.4, 3550.0], [7.5, 3550.0], [7.6, 3550.0], [7.7, 3550.0], [7.8, 3550.0], [7.9, 3550.0], [8.0, 3551.0], [8.1, 3551.0], [8.2, 3551.0], [8.3, 3551.0], [8.4, 3551.0], [8.5, 3551.0], [8.6, 3551.0], [8.7, 3551.0], [8.8, 3551.0], [8.9, 3551.0], [9.0, 3551.0], [9.1, 3551.0], [9.2, 3551.0], [9.3, 3551.0], [9.4, 3551.0], [9.5, 3551.0], [9.6, 3551.0], [9.7, 3551.0], [9.8, 3551.0], [9.9, 3551.0], [10.0, 3551.0], [10.1, 3551.0], [10.2, 3551.0], [10.3, 3551.0], [10.4, 3551.0], [10.5, 3551.0], [10.6, 3551.0], [10.7, 3551.0], [10.8, 3551.0], [10.9, 3551.0], [11.0, 3554.0], [11.1, 3554.0], [11.2, 3554.0], [11.3, 3554.0], [11.4, 3554.0], [11.5, 3554.0], [11.6, 3554.0], [11.7, 3554.0], [11.8, 3554.0], [11.9, 3554.0], [12.0, 3572.0], [12.1, 3572.0], [12.2, 3572.0], [12.3, 3572.0], [12.4, 3572.0], [12.5, 3572.0], [12.6, 3572.0], [12.7, 3572.0], [12.8, 3572.0], [12.9, 3572.0], [13.0, 3577.0], [13.1, 3577.0], [13.2, 3577.0], [13.3, 3577.0], [13.4, 3577.0], [13.5, 3577.0], [13.6, 3577.0], [13.7, 3577.0], [13.8, 3577.0], [13.9, 3577.0], [14.0, 3599.0], [14.1, 3599.0], [14.2, 3599.0], [14.3, 3599.0], [14.4, 3599.0], [14.5, 3599.0], [14.6, 3599.0], [14.7, 3599.0], [14.8, 3599.0], [14.9, 3599.0], [15.0, 3602.0], [15.1, 3602.0], [15.2, 3602.0], [15.3, 3602.0], [15.4, 3602.0], [15.5, 3602.0], [15.6, 3602.0], [15.7, 3602.0], [15.8, 3602.0], [15.9, 3602.0], [16.0, 3608.0], [16.1, 3608.0], [16.2, 3608.0], [16.3, 3608.0], [16.4, 3608.0], [16.5, 3608.0], [16.6, 3608.0], [16.7, 3608.0], [16.8, 3608.0], [16.9, 3608.0], [17.0, 3627.0], [17.1, 3627.0], [17.2, 3627.0], [17.3, 3627.0], [17.4, 3627.0], [17.5, 3627.0], [17.6, 3627.0], [17.7, 3627.0], [17.8, 3627.0], [17.9, 3627.0], [18.0, 3650.0], [18.1, 3650.0], [18.2, 3650.0], [18.3, 3650.0], [18.4, 3650.0], [18.5, 3650.0], [18.6, 3650.0], [18.7, 3650.0], [18.8, 3650.0], [18.9, 3650.0], [19.0, 3653.0], [19.1, 3653.0], [19.2, 3653.0], [19.3, 3653.0], [19.4, 3653.0], [19.5, 3653.0], [19.6, 3653.0], [19.7, 3653.0], [19.8, 3653.0], [19.9, 3653.0], [20.0, 3657.0], [20.1, 3657.0], [20.2, 3657.0], [20.3, 3657.0], [20.4, 3657.0], [20.5, 3657.0], [20.6, 3657.0], [20.7, 3657.0], [20.8, 3657.0], [20.9, 3657.0], [21.0, 3659.0], [21.1, 3659.0], [21.2, 3659.0], [21.3, 3659.0], [21.4, 3659.0], [21.5, 3659.0], [21.6, 3659.0], [21.7, 3659.0], [21.8, 3659.0], [21.9, 3659.0], [22.0, 3665.0], [22.1, 3665.0], [22.2, 3665.0], [22.3, 3665.0], [22.4, 3665.0], [22.5, 3665.0], [22.6, 3665.0], [22.7, 3665.0], [22.8, 3665.0], [22.9, 3665.0], [23.0, 3666.0], [23.1, 3666.0], [23.2, 3666.0], [23.3, 3666.0], [23.4, 3666.0], [23.5, 3666.0], [23.6, 3666.0], [23.7, 3666.0], [23.8, 3666.0], [23.9, 3666.0], [24.0, 3671.0], [24.1, 3671.0], [24.2, 3671.0], [24.3, 3671.0], [24.4, 3671.0], [24.5, 3671.0], [24.6, 3671.0], [24.7, 3671.0], [24.8, 3671.0], [24.9, 3671.0], [25.0, 3676.0], [25.1, 3676.0], [25.2, 3676.0], [25.3, 3676.0], [25.4, 3676.0], [25.5, 3676.0], [25.6, 3676.0], [25.7, 3676.0], [25.8, 3676.0], [25.9, 3676.0], [26.0, 3683.0], [26.1, 3683.0], [26.2, 3683.0], [26.3, 3683.0], [26.4, 3683.0], [26.5, 3683.0], [26.6, 3683.0], [26.7, 3683.0], [26.8, 3683.0], [26.9, 3683.0], [27.0, 3687.0], [27.1, 3687.0], [27.2, 3687.0], [27.3, 3687.0], [27.4, 3687.0], [27.5, 3687.0], [27.6, 3687.0], [27.7, 3687.0], [27.8, 3687.0], [27.9, 3687.0], [28.0, 3694.0], [28.1, 3694.0], [28.2, 3694.0], [28.3, 3694.0], [28.4, 3694.0], [28.5, 3694.0], [28.6, 3694.0], [28.7, 3694.0], [28.8, 3694.0], [28.9, 3694.0], [29.0, 3704.0], [29.1, 3704.0], [29.2, 3704.0], [29.3, 3704.0], [29.4, 3704.0], [29.5, 3704.0], [29.6, 3704.0], [29.7, 3704.0], [29.8, 3704.0], [29.9, 3704.0], [30.0, 3705.0], [30.1, 3705.0], [30.2, 3705.0], [30.3, 3705.0], [30.4, 3705.0], [30.5, 3705.0], [30.6, 3705.0], [30.7, 3705.0], [30.8, 3705.0], [30.9, 3705.0], [31.0, 3719.0], [31.1, 3719.0], [31.2, 3719.0], [31.3, 3719.0], [31.4, 3719.0], [31.5, 3719.0], [31.6, 3719.0], [31.7, 3719.0], [31.8, 3719.0], [31.9, 3719.0], [32.0, 3737.0], [32.1, 3737.0], [32.2, 3737.0], [32.3, 3737.0], [32.4, 3737.0], [32.5, 3737.0], [32.6, 3737.0], [32.7, 3737.0], [32.8, 3737.0], [32.9, 3737.0], [33.0, 3748.0], [33.1, 3748.0], [33.2, 3748.0], [33.3, 3748.0], [33.4, 3748.0], [33.5, 3748.0], [33.6, 3748.0], [33.7, 3748.0], [33.8, 3748.0], [33.9, 3748.0], [34.0, 3751.0], [34.1, 3751.0], [34.2, 3751.0], [34.3, 3751.0], [34.4, 3751.0], [34.5, 3751.0], [34.6, 3751.0], [34.7, 3751.0], [34.8, 3751.0], [34.9, 3751.0], [35.0, 3761.0], [35.1, 3761.0], [35.2, 3761.0], [35.3, 3761.0], [35.4, 3761.0], [35.5, 3761.0], [35.6, 3761.0], [35.7, 3761.0], [35.8, 3761.0], [35.9, 3761.0], [36.0, 3772.0], [36.1, 3772.0], [36.2, 3772.0], [36.3, 3772.0], [36.4, 3772.0], [36.5, 3772.0], [36.6, 3772.0], [36.7, 3772.0], [36.8, 3772.0], [36.9, 3772.0], [37.0, 3774.0], [37.1, 3774.0], [37.2, 3774.0], [37.3, 3774.0], [37.4, 3774.0], [37.5, 3774.0], [37.6, 3774.0], [37.7, 3774.0], [37.8, 3774.0], [37.9, 3774.0], [38.0, 3781.0], [38.1, 3781.0], [38.2, 3781.0], [38.3, 3781.0], [38.4, 3781.0], [38.5, 3781.0], [38.6, 3781.0], [38.7, 3781.0], [38.8, 3781.0], [38.9, 3781.0], [39.0, 3782.0], [39.1, 3782.0], [39.2, 3782.0], [39.3, 3782.0], [39.4, 3782.0], [39.5, 3782.0], [39.6, 3782.0], [39.7, 3782.0], [39.8, 3782.0], [39.9, 3782.0], [40.0, 3803.0], [40.1, 3803.0], [40.2, 3803.0], [40.3, 3803.0], [40.4, 3803.0], [40.5, 3803.0], [40.6, 3803.0], [40.7, 3803.0], [40.8, 3803.0], [40.9, 3803.0], [41.0, 3815.0], [41.1, 3815.0], [41.2, 3815.0], [41.3, 3815.0], [41.4, 3815.0], [41.5, 3815.0], [41.6, 3815.0], [41.7, 3815.0], [41.8, 3815.0], [41.9, 3815.0], [42.0, 3853.0], [42.1, 3853.0], [42.2, 3853.0], [42.3, 3853.0], [42.4, 3853.0], [42.5, 3853.0], [42.6, 3853.0], [42.7, 3853.0], [42.8, 3853.0], [42.9, 3853.0], [43.0, 3870.0], [43.1, 3870.0], [43.2, 3870.0], [43.3, 3870.0], [43.4, 3870.0], [43.5, 3870.0], [43.6, 3870.0], [43.7, 3870.0], [43.8, 3870.0], [43.9, 3870.0], [44.0, 3905.0], [44.1, 3905.0], [44.2, 3905.0], [44.3, 3905.0], [44.4, 3905.0], [44.5, 3905.0], [44.6, 3905.0], [44.7, 3905.0], [44.8, 3905.0], [44.9, 3905.0], [45.0, 3915.0], [45.1, 3915.0], [45.2, 3915.0], [45.3, 3915.0], [45.4, 3915.0], [45.5, 3915.0], [45.6, 3915.0], [45.7, 3915.0], [45.8, 3915.0], [45.9, 3915.0], [46.0, 3918.0], [46.1, 3918.0], [46.2, 3918.0], [46.3, 3918.0], [46.4, 3918.0], [46.5, 3918.0], [46.6, 3918.0], [46.7, 3918.0], [46.8, 3918.0], [46.9, 3918.0], [47.0, 3941.0], [47.1, 3941.0], [47.2, 3941.0], [47.3, 3941.0], [47.4, 3941.0], [47.5, 3941.0], [47.6, 3941.0], [47.7, 3941.0], [47.8, 3941.0], [47.9, 3941.0], [48.0, 3978.0], [48.1, 3978.0], [48.2, 3978.0], [48.3, 3978.0], [48.4, 3978.0], [48.5, 3978.0], [48.6, 3978.0], [48.7, 3978.0], [48.8, 3978.0], [48.9, 3978.0], [49.0, 4051.0], [49.1, 4051.0], [49.2, 4051.0], [49.3, 4051.0], [49.4, 4051.0], [49.5, 4051.0], [49.6, 4051.0], [49.7, 4051.0], [49.8, 4051.0], [49.9, 4051.0], [50.0, 4076.0], [50.1, 4076.0], [50.2, 4076.0], [50.3, 4076.0], [50.4, 4076.0], [50.5, 4076.0], [50.6, 4076.0], [50.7, 4076.0], [50.8, 4076.0], [50.9, 4076.0], [51.0, 4177.0], [51.1, 4177.0], [51.2, 4177.0], [51.3, 4177.0], [51.4, 4177.0], [51.5, 4177.0], [51.6, 4177.0], [51.7, 4177.0], [51.8, 4177.0], [51.9, 4177.0], [52.0, 4187.0], [52.1, 4187.0], [52.2, 4187.0], [52.3, 4187.0], [52.4, 4187.0], [52.5, 4187.0], [52.6, 4187.0], [52.7, 4187.0], [52.8, 4187.0], [52.9, 4187.0], [53.0, 4206.0], [53.1, 4206.0], [53.2, 4206.0], [53.3, 4206.0], [53.4, 4206.0], [53.5, 4206.0], [53.6, 4206.0], [53.7, 4206.0], [53.8, 4206.0], [53.9, 4206.0], [54.0, 4211.0], [54.1, 4211.0], [54.2, 4211.0], [54.3, 4211.0], [54.4, 4211.0], [54.5, 4211.0], [54.6, 4211.0], [54.7, 4211.0], [54.8, 4211.0], [54.9, 4211.0], [55.0, 4221.0], [55.1, 4221.0], [55.2, 4221.0], [55.3, 4221.0], [55.4, 4221.0], [55.5, 4221.0], [55.6, 4221.0], [55.7, 4221.0], [55.8, 4221.0], [55.9, 4221.0], [56.0, 4225.0], [56.1, 4225.0], [56.2, 4225.0], [56.3, 4225.0], [56.4, 4225.0], [56.5, 4225.0], [56.6, 4225.0], [56.7, 4225.0], [56.8, 4225.0], [56.9, 4225.0], [57.0, 4226.0], [57.1, 4226.0], [57.2, 4226.0], [57.3, 4226.0], [57.4, 4226.0], [57.5, 4226.0], [57.6, 4226.0], [57.7, 4226.0], [57.8, 4226.0], [57.9, 4226.0], [58.0, 4297.0], [58.1, 4297.0], [58.2, 4297.0], [58.3, 4297.0], [58.4, 4297.0], [58.5, 4297.0], [58.6, 4297.0], [58.7, 4297.0], [58.8, 4297.0], [58.9, 4297.0], [59.0, 4313.0], [59.1, 4313.0], [59.2, 4313.0], [59.3, 4313.0], [59.4, 4313.0], [59.5, 4313.0], [59.6, 4313.0], [59.7, 4313.0], [59.8, 4313.0], [59.9, 4313.0], [60.0, 4341.0], [60.1, 4341.0], [60.2, 4341.0], [60.3, 4341.0], [60.4, 4341.0], [60.5, 4341.0], [60.6, 4341.0], [60.7, 4341.0], [60.8, 4341.0], [60.9, 4341.0], [61.0, 4362.0], [61.1, 4362.0], [61.2, 4362.0], [61.3, 4362.0], [61.4, 4362.0], [61.5, 4362.0], [61.6, 4362.0], [61.7, 4362.0], [61.8, 4362.0], [61.9, 4362.0], [62.0, 4471.0], [62.1, 4471.0], [62.2, 4471.0], [62.3, 4471.0], [62.4, 4471.0], [62.5, 4471.0], [62.6, 4471.0], [62.7, 4471.0], [62.8, 4471.0], [62.9, 4471.0], [63.0, 4473.0], [63.1, 4473.0], [63.2, 4473.0], [63.3, 4473.0], [63.4, 4473.0], [63.5, 4473.0], [63.6, 4473.0], [63.7, 4473.0], [63.8, 4473.0], [63.9, 4473.0], [64.0, 4481.0], [64.1, 4481.0], [64.2, 4481.0], [64.3, 4481.0], [64.4, 4481.0], [64.5, 4481.0], [64.6, 4481.0], [64.7, 4481.0], [64.8, 4481.0], [64.9, 4481.0], [65.0, 4542.0], [65.1, 4542.0], [65.2, 4542.0], [65.3, 4542.0], [65.4, 4542.0], [65.5, 4542.0], [65.6, 4542.0], [65.7, 4542.0], [65.8, 4542.0], [65.9, 4542.0], [66.0, 4582.0], [66.1, 4582.0], [66.2, 4582.0], [66.3, 4582.0], [66.4, 4582.0], [66.5, 4582.0], [66.6, 4582.0], [66.7, 4582.0], [66.8, 4582.0], [66.9, 4582.0], [67.0, 4660.0], [67.1, 4660.0], [67.2, 4660.0], [67.3, 4660.0], [67.4, 4660.0], [67.5, 4660.0], [67.6, 4660.0], [67.7, 4660.0], [67.8, 4660.0], [67.9, 4660.0], [68.0, 4669.0], [68.1, 4669.0], [68.2, 4669.0], [68.3, 4669.0], [68.4, 4669.0], [68.5, 4669.0], [68.6, 4669.0], [68.7, 4669.0], [68.8, 4669.0], [68.9, 4669.0], [69.0, 4696.0], [69.1, 4696.0], [69.2, 4696.0], [69.3, 4696.0], [69.4, 4696.0], [69.5, 4696.0], [69.6, 4696.0], [69.7, 4696.0], [69.8, 4696.0], [69.9, 4696.0], [70.0, 4704.0], [70.1, 4704.0], [70.2, 4704.0], [70.3, 4704.0], [70.4, 4704.0], [70.5, 4704.0], [70.6, 4704.0], [70.7, 4704.0], [70.8, 4704.0], [70.9, 4704.0], [71.0, 4774.0], [71.1, 4774.0], [71.2, 4774.0], [71.3, 4774.0], [71.4, 4774.0], [71.5, 4774.0], [71.6, 4774.0], [71.7, 4774.0], [71.8, 4774.0], [71.9, 4774.0], [72.0, 4776.0], [72.1, 4776.0], [72.2, 4776.0], [72.3, 4776.0], [72.4, 4776.0], [72.5, 4776.0], [72.6, 4776.0], [72.7, 4776.0], [72.8, 4776.0], [72.9, 4776.0], [73.0, 4819.0], [73.1, 4819.0], [73.2, 4819.0], [73.3, 4819.0], [73.4, 4819.0], [73.5, 4819.0], [73.6, 4819.0], [73.7, 4819.0], [73.8, 4819.0], [73.9, 4819.0], [74.0, 4966.0], [74.1, 4966.0], [74.2, 4966.0], [74.3, 4966.0], [74.4, 4966.0], [74.5, 4966.0], [74.6, 4966.0], [74.7, 4966.0], [74.8, 4966.0], [74.9, 4966.0], [75.0, 5006.0], [75.1, 5006.0], [75.2, 5006.0], [75.3, 5006.0], [75.4, 5006.0], [75.5, 5006.0], [75.6, 5006.0], [75.7, 5006.0], [75.8, 5006.0], [75.9, 5006.0], [76.0, 5013.0], [76.1, 5013.0], [76.2, 5013.0], [76.3, 5013.0], [76.4, 5013.0], [76.5, 5013.0], [76.6, 5013.0], [76.7, 5013.0], [76.8, 5013.0], [76.9, 5013.0], [77.0, 5158.0], [77.1, 5158.0], [77.2, 5158.0], [77.3, 5158.0], [77.4, 5158.0], [77.5, 5158.0], [77.6, 5158.0], [77.7, 5158.0], [77.8, 5158.0], [77.9, 5158.0], [78.0, 5164.0], [78.1, 5164.0], [78.2, 5164.0], [78.3, 5164.0], [78.4, 5164.0], [78.5, 5164.0], [78.6, 5164.0], [78.7, 5164.0], [78.8, 5164.0], [78.9, 5164.0], [79.0, 5393.0], [79.1, 5393.0], [79.2, 5393.0], [79.3, 5393.0], [79.4, 5393.0], [79.5, 5393.0], [79.6, 5393.0], [79.7, 5393.0], [79.8, 5393.0], [79.9, 5393.0], [80.0, 5430.0], [80.1, 5430.0], [80.2, 5430.0], [80.3, 5430.0], [80.4, 5430.0], [80.5, 5430.0], [80.6, 5430.0], [80.7, 5430.0], [80.8, 5430.0], [80.9, 5430.0], [81.0, 5498.0], [81.1, 5498.0], [81.2, 5498.0], [81.3, 5498.0], [81.4, 5498.0], [81.5, 5498.0], [81.6, 5498.0], [81.7, 5498.0], [81.8, 5498.0], [81.9, 5498.0], [82.0, 5502.0], [82.1, 5502.0], [82.2, 5502.0], [82.3, 5502.0], [82.4, 5502.0], [82.5, 5502.0], [82.6, 5502.0], [82.7, 5502.0], [82.8, 5502.0], [82.9, 5502.0], [83.0, 5503.0], [83.1, 5503.0], [83.2, 5503.0], [83.3, 5503.0], [83.4, 5503.0], [83.5, 5503.0], [83.6, 5503.0], [83.7, 5503.0], [83.8, 5503.0], [83.9, 5503.0], [84.0, 5536.0], [84.1, 5536.0], [84.2, 5536.0], [84.3, 5536.0], [84.4, 5536.0], [84.5, 5536.0], [84.6, 5536.0], [84.7, 5536.0], [84.8, 5536.0], [84.9, 5536.0], [85.0, 5693.0], [85.1, 5693.0], [85.2, 5693.0], [85.3, 5693.0], [85.4, 5693.0], [85.5, 5693.0], [85.6, 5693.0], [85.7, 5693.0], [85.8, 5693.0], [85.9, 5693.0], [86.0, 5754.0], [86.1, 5754.0], [86.2, 5754.0], [86.3, 5754.0], [86.4, 5754.0], [86.5, 5754.0], [86.6, 5754.0], [86.7, 5754.0], [86.8, 5754.0], [86.9, 5754.0], [87.0, 6048.0], [87.1, 6048.0], [87.2, 6048.0], [87.3, 6048.0], [87.4, 6048.0], [87.5, 6048.0], [87.6, 6048.0], [87.7, 6048.0], [87.8, 6048.0], [87.9, 6048.0], [88.0, 6110.0], [88.1, 6110.0], [88.2, 6110.0], [88.3, 6110.0], [88.4, 6110.0], [88.5, 6110.0], [88.6, 6110.0], [88.7, 6110.0], [88.8, 6110.0], [88.9, 6110.0], [89.0, 6447.0], [89.1, 6447.0], [89.2, 6447.0], [89.3, 6447.0], [89.4, 6447.0], [89.5, 6447.0], [89.6, 6447.0], [89.7, 6447.0], [89.8, 6447.0], [89.9, 6447.0], [90.0, 6523.0], [90.1, 6523.0], [90.2, 6523.0], [90.3, 6523.0], [90.4, 6523.0], [90.5, 6523.0], [90.6, 6523.0], [90.7, 6523.0], [90.8, 6523.0], [90.9, 6523.0], [91.0, 6656.0], [91.1, 6656.0], [91.2, 6656.0], [91.3, 6656.0], [91.4, 6656.0], [91.5, 6656.0], [91.6, 6656.0], [91.7, 6656.0], [91.8, 6656.0], [91.9, 6656.0], [92.0, 6773.0], [92.1, 6773.0], [92.2, 6773.0], [92.3, 6773.0], [92.4, 6773.0], [92.5, 6773.0], [92.6, 6773.0], [92.7, 6773.0], [92.8, 6773.0], [92.9, 6773.0], [93.0, 6866.0], [93.1, 6866.0], [93.2, 6866.0], [93.3, 6866.0], [93.4, 6866.0], [93.5, 6866.0], [93.6, 6866.0], [93.7, 6866.0], [93.8, 6866.0], [93.9, 6866.0], [94.0, 6951.0], [94.1, 6951.0], [94.2, 6951.0], [94.3, 6951.0], [94.4, 6951.0], [94.5, 6951.0], [94.6, 6951.0], [94.7, 6951.0], [94.8, 6951.0], [94.9, 6951.0], [95.0, 7204.0], [95.1, 7204.0], [95.2, 7204.0], [95.3, 7204.0], [95.4, 7204.0], [95.5, 7204.0], [95.6, 7204.0], [95.7, 7204.0], [95.8, 7204.0], [95.9, 7204.0], [96.0, 7342.0], [96.1, 7342.0], [96.2, 7342.0], [96.3, 7342.0], [96.4, 7342.0], [96.5, 7342.0], [96.6, 7342.0], [96.7, 7342.0], [96.8, 7342.0], [96.9, 7342.0], [97.0, 7783.0], [97.1, 7783.0], [97.2, 7783.0], [97.3, 7783.0], [97.4, 7783.0], [97.5, 7783.0], [97.6, 7783.0], [97.7, 7783.0], [97.8, 7783.0], [97.9, 7783.0], [98.0, 9739.0], [98.1, 9739.0], [98.2, 9739.0], [98.3, 9739.0], [98.4, 9739.0], [98.5, 9739.0], [98.6, 9739.0], [98.7, 9739.0], [98.8, 9739.0], [98.9, 9739.0], [99.0, 11553.0], [99.1, 11553.0], [99.2, 11553.0], [99.3, 11553.0], [99.4, 11553.0], [99.5, 11553.0], [99.6, 11553.0], [99.7, 11553.0], [99.8, 11553.0], [99.9, 11553.0]], "isOverall": false, "label": "contact", "isController": false}, {"data": [[0.0, 3099.0], [0.1, 3099.0], [0.2, 3099.0], [0.3, 3099.0], [0.4, 3099.0], [0.5, 3099.0], [0.6, 3099.0], [0.7, 3099.0], [0.8, 3099.0], [0.9, 3099.0], [1.0, 3456.0], [1.1, 3456.0], [1.2, 3456.0], [1.3, 3456.0], [1.4, 3456.0], [1.5, 3456.0], [1.6, 3456.0], [1.7, 3456.0], [1.8, 3456.0], [1.9, 3456.0], [2.0, 3458.0], [2.1, 3458.0], [2.2, 3458.0], [2.3, 3458.0], [2.4, 3458.0], [2.5, 3458.0], [2.6, 3458.0], [2.7, 3458.0], [2.8, 3458.0], [2.9, 3458.0], [3.0, 3460.0], [3.1, 3460.0], [3.2, 3460.0], [3.3, 3460.0], [3.4, 3460.0], [3.5, 3460.0], [3.6, 3460.0], [3.7, 3460.0], [3.8, 3460.0], [3.9, 3460.0], [4.0, 3464.0], [4.1, 3464.0], [4.2, 3464.0], [4.3, 3464.0], [4.4, 3464.0], [4.5, 3464.0], [4.6, 3464.0], [4.7, 3464.0], [4.8, 3464.0], [4.9, 3464.0], [5.0, 3466.0], [5.1, 3466.0], [5.2, 3466.0], [5.3, 3466.0], [5.4, 3466.0], [5.5, 3466.0], [5.6, 3466.0], [5.7, 3466.0], [5.8, 3466.0], [5.9, 3466.0], [6.0, 3471.0], [6.1, 3471.0], [6.2, 3471.0], [6.3, 3471.0], [6.4, 3471.0], [6.5, 3471.0], [6.6, 3471.0], [6.7, 3471.0], [6.8, 3471.0], [6.9, 3471.0], [7.0, 3479.0], [7.1, 3479.0], [7.2, 3479.0], [7.3, 3479.0], [7.4, 3479.0], [7.5, 3479.0], [7.6, 3479.0], [7.7, 3479.0], [7.8, 3479.0], [7.9, 3479.0], [8.0, 3481.0], [8.1, 3481.0], [8.2, 3481.0], [8.3, 3481.0], [8.4, 3481.0], [8.5, 3481.0], [8.6, 3481.0], [8.7, 3481.0], [8.8, 3481.0], [8.9, 3481.0], [9.0, 3486.0], [9.1, 3486.0], [9.2, 3486.0], [9.3, 3486.0], [9.4, 3486.0], [9.5, 3486.0], [9.6, 3486.0], [9.7, 3486.0], [9.8, 3486.0], [9.9, 3486.0], [10.0, 3488.0], [10.1, 3488.0], [10.2, 3488.0], [10.3, 3488.0], [10.4, 3488.0], [10.5, 3488.0], [10.6, 3488.0], [10.7, 3488.0], [10.8, 3488.0], [10.9, 3488.0], [11.0, 3491.0], [11.1, 3491.0], [11.2, 3491.0], [11.3, 3491.0], [11.4, 3491.0], [11.5, 3491.0], [11.6, 3491.0], [11.7, 3491.0], [11.8, 3491.0], [11.9, 3491.0], [12.0, 3491.0], [12.1, 3491.0], [12.2, 3491.0], [12.3, 3491.0], [12.4, 3491.0], [12.5, 3491.0], [12.6, 3491.0], [12.7, 3491.0], [12.8, 3491.0], [12.9, 3491.0], [13.0, 3491.0], [13.1, 3491.0], [13.2, 3491.0], [13.3, 3491.0], [13.4, 3491.0], [13.5, 3491.0], [13.6, 3491.0], [13.7, 3491.0], [13.8, 3491.0], [13.9, 3491.0], [14.0, 3492.0], [14.1, 3492.0], [14.2, 3492.0], [14.3, 3492.0], [14.4, 3492.0], [14.5, 3492.0], [14.6, 3492.0], [14.7, 3492.0], [14.8, 3492.0], [14.9, 3492.0], [15.0, 3493.0], [15.1, 3493.0], [15.2, 3493.0], [15.3, 3493.0], [15.4, 3493.0], [15.5, 3493.0], [15.6, 3493.0], [15.7, 3493.0], [15.8, 3493.0], [15.9, 3493.0], [16.0, 3502.0], [16.1, 3502.0], [16.2, 3502.0], [16.3, 3502.0], [16.4, 3502.0], [16.5, 3502.0], [16.6, 3502.0], [16.7, 3502.0], [16.8, 3502.0], [16.9, 3502.0], [17.0, 3503.0], [17.1, 3503.0], [17.2, 3503.0], [17.3, 3503.0], [17.4, 3503.0], [17.5, 3503.0], [17.6, 3503.0], [17.7, 3503.0], [17.8, 3503.0], [17.9, 3503.0], [18.0, 3510.0], [18.1, 3510.0], [18.2, 3510.0], [18.3, 3510.0], [18.4, 3510.0], [18.5, 3510.0], [18.6, 3510.0], [18.7, 3510.0], [18.8, 3510.0], [18.9, 3510.0], [19.0, 3515.0], [19.1, 3515.0], [19.2, 3515.0], [19.3, 3515.0], [19.4, 3515.0], [19.5, 3515.0], [19.6, 3515.0], [19.7, 3515.0], [19.8, 3515.0], [19.9, 3515.0], [20.0, 3517.0], [20.1, 3517.0], [20.2, 3517.0], [20.3, 3517.0], [20.4, 3517.0], [20.5, 3517.0], [20.6, 3517.0], [20.7, 3517.0], [20.8, 3517.0], [20.9, 3517.0], [21.0, 3520.0], [21.1, 3520.0], [21.2, 3520.0], [21.3, 3520.0], [21.4, 3520.0], [21.5, 3520.0], [21.6, 3520.0], [21.7, 3520.0], [21.8, 3520.0], [21.9, 3520.0], [22.0, 3521.0], [22.1, 3521.0], [22.2, 3521.0], [22.3, 3521.0], [22.4, 3521.0], [22.5, 3521.0], [22.6, 3521.0], [22.7, 3521.0], [22.8, 3521.0], [22.9, 3521.0], [23.0, 3526.0], [23.1, 3526.0], [23.2, 3526.0], [23.3, 3526.0], [23.4, 3526.0], [23.5, 3526.0], [23.6, 3526.0], [23.7, 3526.0], [23.8, 3526.0], [23.9, 3526.0], [24.0, 3531.0], [24.1, 3531.0], [24.2, 3531.0], [24.3, 3531.0], [24.4, 3531.0], [24.5, 3531.0], [24.6, 3531.0], [24.7, 3531.0], [24.8, 3531.0], [24.9, 3531.0], [25.0, 3535.0], [25.1, 3535.0], [25.2, 3535.0], [25.3, 3535.0], [25.4, 3535.0], [25.5, 3535.0], [25.6, 3535.0], [25.7, 3535.0], [25.8, 3535.0], [25.9, 3535.0], [26.0, 3539.0], [26.1, 3539.0], [26.2, 3539.0], [26.3, 3539.0], [26.4, 3539.0], [26.5, 3539.0], [26.6, 3539.0], [26.7, 3539.0], [26.8, 3539.0], [26.9, 3539.0], [27.0, 3539.0], [27.1, 3539.0], [27.2, 3539.0], [27.3, 3539.0], [27.4, 3539.0], [27.5, 3539.0], [27.6, 3539.0], [27.7, 3539.0], [27.8, 3539.0], [27.9, 3539.0], [28.0, 3544.0], [28.1, 3544.0], [28.2, 3544.0], [28.3, 3544.0], [28.4, 3544.0], [28.5, 3544.0], [28.6, 3544.0], [28.7, 3544.0], [28.8, 3544.0], [28.9, 3544.0], [29.0, 3546.0], [29.1, 3546.0], [29.2, 3546.0], [29.3, 3546.0], [29.4, 3546.0], [29.5, 3546.0], [29.6, 3546.0], [29.7, 3546.0], [29.8, 3546.0], [29.9, 3546.0], [30.0, 3549.0], [30.1, 3549.0], [30.2, 3549.0], [30.3, 3549.0], [30.4, 3549.0], [30.5, 3549.0], [30.6, 3549.0], [30.7, 3549.0], [30.8, 3549.0], [30.9, 3549.0], [31.0, 3551.0], [31.1, 3551.0], [31.2, 3551.0], [31.3, 3551.0], [31.4, 3551.0], [31.5, 3551.0], [31.6, 3551.0], [31.7, 3551.0], [31.8, 3551.0], [31.9, 3551.0], [32.0, 3554.0], [32.1, 3554.0], [32.2, 3554.0], [32.3, 3554.0], [32.4, 3554.0], [32.5, 3554.0], [32.6, 3554.0], [32.7, 3554.0], [32.8, 3554.0], [32.9, 3554.0], [33.0, 3555.0], [33.1, 3555.0], [33.2, 3555.0], [33.3, 3555.0], [33.4, 3555.0], [33.5, 3555.0], [33.6, 3555.0], [33.7, 3555.0], [33.8, 3555.0], [33.9, 3555.0], [34.0, 3575.0], [34.1, 3575.0], [34.2, 3575.0], [34.3, 3575.0], [34.4, 3575.0], [34.5, 3575.0], [34.6, 3575.0], [34.7, 3575.0], [34.8, 3575.0], [34.9, 3575.0], [35.0, 3577.0], [35.1, 3577.0], [35.2, 3577.0], [35.3, 3577.0], [35.4, 3577.0], [35.5, 3577.0], [35.6, 3577.0], [35.7, 3577.0], [35.8, 3577.0], [35.9, 3577.0], [36.0, 3583.0], [36.1, 3583.0], [36.2, 3583.0], [36.3, 3583.0], [36.4, 3583.0], [36.5, 3583.0], [36.6, 3583.0], [36.7, 3583.0], [36.8, 3583.0], [36.9, 3583.0], [37.0, 3609.0], [37.1, 3609.0], [37.2, 3609.0], [37.3, 3609.0], [37.4, 3609.0], [37.5, 3609.0], [37.6, 3609.0], [37.7, 3609.0], [37.8, 3609.0], [37.9, 3609.0], [38.0, 3627.0], [38.1, 3627.0], [38.2, 3627.0], [38.3, 3627.0], [38.4, 3627.0], [38.5, 3627.0], [38.6, 3627.0], [38.7, 3627.0], [38.8, 3627.0], [38.9, 3627.0], [39.0, 3633.0], [39.1, 3633.0], [39.2, 3633.0], [39.3, 3633.0], [39.4, 3633.0], [39.5, 3633.0], [39.6, 3633.0], [39.7, 3633.0], [39.8, 3633.0], [39.9, 3633.0], [40.0, 3634.0], [40.1, 3634.0], [40.2, 3634.0], [40.3, 3634.0], [40.4, 3634.0], [40.5, 3634.0], [40.6, 3634.0], [40.7, 3634.0], [40.8, 3634.0], [40.9, 3634.0], [41.0, 3637.0], [41.1, 3637.0], [41.2, 3637.0], [41.3, 3637.0], [41.4, 3637.0], [41.5, 3637.0], [41.6, 3637.0], [41.7, 3637.0], [41.8, 3637.0], [41.9, 3637.0], [42.0, 3649.0], [42.1, 3649.0], [42.2, 3649.0], [42.3, 3649.0], [42.4, 3649.0], [42.5, 3649.0], [42.6, 3649.0], [42.7, 3649.0], [42.8, 3649.0], [42.9, 3649.0], [43.0, 3671.0], [43.1, 3671.0], [43.2, 3671.0], [43.3, 3671.0], [43.4, 3671.0], [43.5, 3671.0], [43.6, 3671.0], [43.7, 3671.0], [43.8, 3671.0], [43.9, 3671.0], [44.0, 3678.0], [44.1, 3678.0], [44.2, 3678.0], [44.3, 3678.0], [44.4, 3678.0], [44.5, 3678.0], [44.6, 3678.0], [44.7, 3678.0], [44.8, 3678.0], [44.9, 3678.0], [45.0, 3686.0], [45.1, 3686.0], [45.2, 3686.0], [45.3, 3686.0], [45.4, 3686.0], [45.5, 3686.0], [45.6, 3686.0], [45.7, 3686.0], [45.8, 3686.0], [45.9, 3686.0], [46.0, 3687.0], [46.1, 3687.0], [46.2, 3687.0], [46.3, 3687.0], [46.4, 3687.0], [46.5, 3687.0], [46.6, 3687.0], [46.7, 3687.0], [46.8, 3687.0], [46.9, 3687.0], [47.0, 3731.0], [47.1, 3731.0], [47.2, 3731.0], [47.3, 3731.0], [47.4, 3731.0], [47.5, 3731.0], [47.6, 3731.0], [47.7, 3731.0], [47.8, 3731.0], [47.9, 3731.0], [48.0, 3742.0], [48.1, 3742.0], [48.2, 3742.0], [48.3, 3742.0], [48.4, 3742.0], [48.5, 3742.0], [48.6, 3742.0], [48.7, 3742.0], [48.8, 3742.0], [48.9, 3742.0], [49.0, 3793.0], [49.1, 3793.0], [49.2, 3793.0], [49.3, 3793.0], [49.4, 3793.0], [49.5, 3793.0], [49.6, 3793.0], [49.7, 3793.0], [49.8, 3793.0], [49.9, 3793.0], [50.0, 3814.0], [50.1, 3814.0], [50.2, 3814.0], [50.3, 3814.0], [50.4, 3814.0], [50.5, 3814.0], [50.6, 3814.0], [50.7, 3814.0], [50.8, 3814.0], [50.9, 3814.0], [51.0, 3818.0], [51.1, 3818.0], [51.2, 3818.0], [51.3, 3818.0], [51.4, 3818.0], [51.5, 3818.0], [51.6, 3818.0], [51.7, 3818.0], [51.8, 3818.0], [51.9, 3818.0], [52.0, 3827.0], [52.1, 3827.0], [52.2, 3827.0], [52.3, 3827.0], [52.4, 3827.0], [52.5, 3827.0], [52.6, 3827.0], [52.7, 3827.0], [52.8, 3827.0], [52.9, 3827.0], [53.0, 3830.0], [53.1, 3830.0], [53.2, 3830.0], [53.3, 3830.0], [53.4, 3830.0], [53.5, 3830.0], [53.6, 3830.0], [53.7, 3830.0], [53.8, 3830.0], [53.9, 3830.0], [54.0, 3835.0], [54.1, 3835.0], [54.2, 3835.0], [54.3, 3835.0], [54.4, 3835.0], [54.5, 3835.0], [54.6, 3835.0], [54.7, 3835.0], [54.8, 3835.0], [54.9, 3835.0], [55.0, 3862.0], [55.1, 3862.0], [55.2, 3862.0], [55.3, 3862.0], [55.4, 3862.0], [55.5, 3862.0], [55.6, 3862.0], [55.7, 3862.0], [55.8, 3862.0], [55.9, 3862.0], [56.0, 3872.0], [56.1, 3872.0], [56.2, 3872.0], [56.3, 3872.0], [56.4, 3872.0], [56.5, 3872.0], [56.6, 3872.0], [56.7, 3872.0], [56.8, 3872.0], [56.9, 3872.0], [57.0, 3900.0], [57.1, 3900.0], [57.2, 3900.0], [57.3, 3900.0], [57.4, 3900.0], [57.5, 3900.0], [57.6, 3900.0], [57.7, 3900.0], [57.8, 3900.0], [57.9, 3900.0], [58.0, 3994.0], [58.1, 3994.0], [58.2, 3994.0], [58.3, 3994.0], [58.4, 3994.0], [58.5, 3994.0], [58.6, 3994.0], [58.7, 3994.0], [58.8, 3994.0], [58.9, 3994.0], [59.0, 4055.0], [59.1, 4055.0], [59.2, 4055.0], [59.3, 4055.0], [59.4, 4055.0], [59.5, 4055.0], [59.6, 4055.0], [59.7, 4055.0], [59.8, 4055.0], [59.9, 4055.0], [60.0, 4089.0], [60.1, 4089.0], [60.2, 4089.0], [60.3, 4089.0], [60.4, 4089.0], [60.5, 4089.0], [60.6, 4089.0], [60.7, 4089.0], [60.8, 4089.0], [60.9, 4089.0], [61.0, 4140.0], [61.1, 4140.0], [61.2, 4140.0], [61.3, 4140.0], [61.4, 4140.0], [61.5, 4140.0], [61.6, 4140.0], [61.7, 4140.0], [61.8, 4140.0], [61.9, 4140.0], [62.0, 4273.0], [62.1, 4273.0], [62.2, 4273.0], [62.3, 4273.0], [62.4, 4273.0], [62.5, 4273.0], [62.6, 4273.0], [62.7, 4273.0], [62.8, 4273.0], [62.9, 4273.0], [63.0, 4348.0], [63.1, 4348.0], [63.2, 4348.0], [63.3, 4348.0], [63.4, 4348.0], [63.5, 4348.0], [63.6, 4348.0], [63.7, 4348.0], [63.8, 4348.0], [63.9, 4348.0], [64.0, 4394.0], [64.1, 4394.0], [64.2, 4394.0], [64.3, 4394.0], [64.4, 4394.0], [64.5, 4394.0], [64.6, 4394.0], [64.7, 4394.0], [64.8, 4394.0], [64.9, 4394.0], [65.0, 4408.0], [65.1, 4408.0], [65.2, 4408.0], [65.3, 4408.0], [65.4, 4408.0], [65.5, 4408.0], [65.6, 4408.0], [65.7, 4408.0], [65.8, 4408.0], [65.9, 4408.0], [66.0, 4614.0], [66.1, 4614.0], [66.2, 4614.0], [66.3, 4614.0], [66.4, 4614.0], [66.5, 4614.0], [66.6, 4614.0], [66.7, 4614.0], [66.8, 4614.0], [66.9, 4614.0], [67.0, 4738.0], [67.1, 4738.0], [67.2, 4738.0], [67.3, 4738.0], [67.4, 4738.0], [67.5, 4738.0], [67.6, 4738.0], [67.7, 4738.0], [67.8, 4738.0], [67.9, 4738.0], [68.0, 4742.0], [68.1, 4742.0], [68.2, 4742.0], [68.3, 4742.0], [68.4, 4742.0], [68.5, 4742.0], [68.6, 4742.0], [68.7, 4742.0], [68.8, 4742.0], [68.9, 4742.0], [69.0, 4811.0], [69.1, 4811.0], [69.2, 4811.0], [69.3, 4811.0], [69.4, 4811.0], [69.5, 4811.0], [69.6, 4811.0], [69.7, 4811.0], [69.8, 4811.0], [69.9, 4811.0], [70.0, 4867.0], [70.1, 4867.0], [70.2, 4867.0], [70.3, 4867.0], [70.4, 4867.0], [70.5, 4867.0], [70.6, 4867.0], [70.7, 4867.0], [70.8, 4867.0], [70.9, 4867.0], [71.0, 4938.0], [71.1, 4938.0], [71.2, 4938.0], [71.3, 4938.0], [71.4, 4938.0], [71.5, 4938.0], [71.6, 4938.0], [71.7, 4938.0], [71.8, 4938.0], [71.9, 4938.0], [72.0, 5105.0], [72.1, 5105.0], [72.2, 5105.0], [72.3, 5105.0], [72.4, 5105.0], [72.5, 5105.0], [72.6, 5105.0], [72.7, 5105.0], [72.8, 5105.0], [72.9, 5105.0], [73.0, 5175.0], [73.1, 5175.0], [73.2, 5175.0], [73.3, 5175.0], [73.4, 5175.0], [73.5, 5175.0], [73.6, 5175.0], [73.7, 5175.0], [73.8, 5175.0], [73.9, 5175.0], [74.0, 5224.0], [74.1, 5224.0], [74.2, 5224.0], [74.3, 5224.0], [74.4, 5224.0], [74.5, 5224.0], [74.6, 5224.0], [74.7, 5224.0], [74.8, 5224.0], [74.9, 5224.0], [75.0, 5349.0], [75.1, 5349.0], [75.2, 5349.0], [75.3, 5349.0], [75.4, 5349.0], [75.5, 5349.0], [75.6, 5349.0], [75.7, 5349.0], [75.8, 5349.0], [75.9, 5349.0], [76.0, 5558.0], [76.1, 5558.0], [76.2, 5558.0], [76.3, 5558.0], [76.4, 5558.0], [76.5, 5558.0], [76.6, 5558.0], [76.7, 5558.0], [76.8, 5558.0], [76.9, 5558.0], [77.0, 5561.0], [77.1, 5561.0], [77.2, 5561.0], [77.3, 5561.0], [77.4, 5561.0], [77.5, 5561.0], [77.6, 5561.0], [77.7, 5561.0], [77.8, 5561.0], [77.9, 5561.0], [78.0, 5567.0], [78.1, 5567.0], [78.2, 5567.0], [78.3, 5567.0], [78.4, 5567.0], [78.5, 5567.0], [78.6, 5567.0], [78.7, 5567.0], [78.8, 5567.0], [78.9, 5567.0], [79.0, 5657.0], [79.1, 5657.0], [79.2, 5657.0], [79.3, 5657.0], [79.4, 5657.0], [79.5, 5657.0], [79.6, 5657.0], [79.7, 5657.0], [79.8, 5657.0], [79.9, 5657.0], [80.0, 5696.0], [80.1, 5696.0], [80.2, 5696.0], [80.3, 5696.0], [80.4, 5696.0], [80.5, 5696.0], [80.6, 5696.0], [80.7, 5696.0], [80.8, 5696.0], [80.9, 5696.0], [81.0, 5700.0], [81.1, 5700.0], [81.2, 5700.0], [81.3, 5700.0], [81.4, 5700.0], [81.5, 5700.0], [81.6, 5700.0], [81.7, 5700.0], [81.8, 5700.0], [81.9, 5700.0], [82.0, 5743.0], [82.1, 5743.0], [82.2, 5743.0], [82.3, 5743.0], [82.4, 5743.0], [82.5, 5743.0], [82.6, 5743.0], [82.7, 5743.0], [82.8, 5743.0], [82.9, 5743.0], [83.0, 5820.0], [83.1, 5820.0], [83.2, 5820.0], [83.3, 5820.0], [83.4, 5820.0], [83.5, 5820.0], [83.6, 5820.0], [83.7, 5820.0], [83.8, 5820.0], [83.9, 5820.0], [84.0, 5833.0], [84.1, 5833.0], [84.2, 5833.0], [84.3, 5833.0], [84.4, 5833.0], [84.5, 5833.0], [84.6, 5833.0], [84.7, 5833.0], [84.8, 5833.0], [84.9, 5833.0], [85.0, 5859.0], [85.1, 5859.0], [85.2, 5859.0], [85.3, 5859.0], [85.4, 5859.0], [85.5, 5859.0], [85.6, 5859.0], [85.7, 5859.0], [85.8, 5859.0], [85.9, 5859.0], [86.0, 6005.0], [86.1, 6005.0], [86.2, 6005.0], [86.3, 6005.0], [86.4, 6005.0], [86.5, 6005.0], [86.6, 6005.0], [86.7, 6005.0], [86.8, 6005.0], [86.9, 6005.0], [87.0, 6096.0], [87.1, 6096.0], [87.2, 6096.0], [87.3, 6096.0], [87.4, 6096.0], [87.5, 6096.0], [87.6, 6096.0], [87.7, 6096.0], [87.8, 6096.0], [87.9, 6096.0], [88.0, 6374.0], [88.1, 6374.0], [88.2, 6374.0], [88.3, 6374.0], [88.4, 6374.0], [88.5, 6374.0], [88.6, 6374.0], [88.7, 6374.0], [88.8, 6374.0], [88.9, 6374.0], [89.0, 6639.0], [89.1, 6639.0], [89.2, 6639.0], [89.3, 6639.0], [89.4, 6639.0], [89.5, 6639.0], [89.6, 6639.0], [89.7, 6639.0], [89.8, 6639.0], [89.9, 6639.0], [90.0, 6779.0], [90.1, 6779.0], [90.2, 6779.0], [90.3, 6779.0], [90.4, 6779.0], [90.5, 6779.0], [90.6, 6779.0], [90.7, 6779.0], [90.8, 6779.0], [90.9, 6779.0], [91.0, 6891.0], [91.1, 6891.0], [91.2, 6891.0], [91.3, 6891.0], [91.4, 6891.0], [91.5, 6891.0], [91.6, 6891.0], [91.7, 6891.0], [91.8, 6891.0], [91.9, 6891.0], [92.0, 7047.0], [92.1, 7047.0], [92.2, 7047.0], [92.3, 7047.0], [92.4, 7047.0], [92.5, 7047.0], [92.6, 7047.0], [92.7, 7047.0], [92.8, 7047.0], [92.9, 7047.0], [93.0, 7332.0], [93.1, 7332.0], [93.2, 7332.0], [93.3, 7332.0], [93.4, 7332.0], [93.5, 7332.0], [93.6, 7332.0], [93.7, 7332.0], [93.8, 7332.0], [93.9, 7332.0], [94.0, 7359.0], [94.1, 7359.0], [94.2, 7359.0], [94.3, 7359.0], [94.4, 7359.0], [94.5, 7359.0], [94.6, 7359.0], [94.7, 7359.0], [94.8, 7359.0], [94.9, 7359.0], [95.0, 7513.0], [95.1, 7513.0], [95.2, 7513.0], [95.3, 7513.0], [95.4, 7513.0], [95.5, 7513.0], [95.6, 7513.0], [95.7, 7513.0], [95.8, 7513.0], [95.9, 7513.0], [96.0, 7637.0], [96.1, 7637.0], [96.2, 7637.0], [96.3, 7637.0], [96.4, 7637.0], [96.5, 7637.0], [96.6, 7637.0], [96.7, 7637.0], [96.8, 7637.0], [96.9, 7637.0], [97.0, 7807.0], [97.1, 7807.0], [97.2, 7807.0], [97.3, 7807.0], [97.4, 7807.0], [97.5, 7807.0], [97.6, 7807.0], [97.7, 7807.0], [97.8, 7807.0], [97.9, 7807.0], [98.0, 8267.0], [98.1, 8267.0], [98.2, 8267.0], [98.3, 8267.0], [98.4, 8267.0], [98.5, 8267.0], [98.6, 8267.0], [98.7, 8267.0], [98.8, 8267.0], [98.9, 8267.0], [99.0, 8402.0], [99.1, 8402.0], [99.2, 8402.0], [99.3, 8402.0], [99.4, 8402.0], [99.5, 8402.0], [99.6, 8402.0], [99.7, 8402.0], [99.8, 8402.0], [99.9, 8402.0]], "isOverall": false, "label": "about", "isController": false}, {"data": [[0.0, 3985.0], [0.1, 3985.0], [0.2, 3985.0], [0.3, 3985.0], [0.4, 3985.0], [0.5, 3985.0], [0.6, 3985.0], [0.7, 3985.0], [0.8, 3985.0], [0.9, 3985.0], [1.0, 4608.0], [1.1, 4608.0], [1.2, 4608.0], [1.3, 4608.0], [1.4, 4608.0], [1.5, 4608.0], [1.6, 4608.0], [1.7, 4608.0], [1.8, 4608.0], [1.9, 4608.0], [2.0, 4618.0], [2.1, 4618.0], [2.2, 4618.0], [2.3, 4618.0], [2.4, 4618.0], [2.5, 4618.0], [2.6, 4618.0], [2.7, 4618.0], [2.8, 4618.0], [2.9, 4618.0], [3.0, 6040.0], [3.1, 6040.0], [3.2, 6040.0], [3.3, 6040.0], [3.4, 6040.0], [3.5, 6040.0], [3.6, 6040.0], [3.7, 6040.0], [3.8, 6040.0], [3.9, 6040.0], [4.0, 6146.0], [4.1, 6146.0], [4.2, 6146.0], [4.3, 6146.0], [4.4, 6146.0], [4.5, 6146.0], [4.6, 6146.0], [4.7, 6146.0], [4.8, 6146.0], [4.9, 6146.0], [5.0, 6299.0], [5.1, 6299.0], [5.2, 6299.0], [5.3, 6299.0], [5.4, 6299.0], [5.5, 6299.0], [5.6, 6299.0], [5.7, 6299.0], [5.8, 6299.0], [5.9, 6299.0], [6.0, 6363.0], [6.1, 6363.0], [6.2, 6363.0], [6.3, 6363.0], [6.4, 6363.0], [6.5, 6363.0], [6.6, 6363.0], [6.7, 6363.0], [6.8, 6363.0], [6.9, 6363.0], [7.0, 6447.0], [7.1, 6447.0], [7.2, 6447.0], [7.3, 6447.0], [7.4, 6447.0], [7.5, 6447.0], [7.6, 6447.0], [7.7, 6447.0], [7.8, 6447.0], [7.9, 6447.0], [8.0, 6491.0], [8.1, 6491.0], [8.2, 6491.0], [8.3, 6491.0], [8.4, 6491.0], [8.5, 6491.0], [8.6, 6491.0], [8.7, 6491.0], [8.8, 6491.0], [8.9, 6491.0], [9.0, 6494.0], [9.1, 6494.0], [9.2, 6494.0], [9.3, 6494.0], [9.4, 6494.0], [9.5, 6494.0], [9.6, 6494.0], [9.7, 6494.0], [9.8, 6494.0], [9.9, 6494.0], [10.0, 6526.0], [10.1, 6526.0], [10.2, 6526.0], [10.3, 6526.0], [10.4, 6526.0], [10.5, 6526.0], [10.6, 6526.0], [10.7, 6526.0], [10.8, 6526.0], [10.9, 6526.0], [11.0, 6585.0], [11.1, 6585.0], [11.2, 6585.0], [11.3, 6585.0], [11.4, 6585.0], [11.5, 6585.0], [11.6, 6585.0], [11.7, 6585.0], [11.8, 6585.0], [11.9, 6585.0], [12.0, 6602.0], [12.1, 6602.0], [12.2, 6602.0], [12.3, 6602.0], [12.4, 6602.0], [12.5, 6602.0], [12.6, 6602.0], [12.7, 6602.0], [12.8, 6602.0], [12.9, 6602.0], [13.0, 6607.0], [13.1, 6607.0], [13.2, 6607.0], [13.3, 6607.0], [13.4, 6607.0], [13.5, 6607.0], [13.6, 6607.0], [13.7, 6607.0], [13.8, 6607.0], [13.9, 6607.0], [14.0, 6643.0], [14.1, 6643.0], [14.2, 6643.0], [14.3, 6643.0], [14.4, 6643.0], [14.5, 6643.0], [14.6, 6643.0], [14.7, 6643.0], [14.8, 6643.0], [14.9, 6643.0], [15.0, 6646.0], [15.1, 6646.0], [15.2, 6646.0], [15.3, 6646.0], [15.4, 6646.0], [15.5, 6646.0], [15.6, 6646.0], [15.7, 6646.0], [15.8, 6646.0], [15.9, 6646.0], [16.0, 6730.0], [16.1, 6730.0], [16.2, 6730.0], [16.3, 6730.0], [16.4, 6730.0], [16.5, 6730.0], [16.6, 6730.0], [16.7, 6730.0], [16.8, 6730.0], [16.9, 6730.0], [17.0, 6948.0], [17.1, 6948.0], [17.2, 6948.0], [17.3, 6948.0], [17.4, 6948.0], [17.5, 6948.0], [17.6, 6948.0], [17.7, 6948.0], [17.8, 6948.0], [17.9, 6948.0], [18.0, 6997.0], [18.1, 6997.0], [18.2, 6997.0], [18.3, 6997.0], [18.4, 6997.0], [18.5, 6997.0], [18.6, 6997.0], [18.7, 6997.0], [18.8, 6997.0], [18.9, 6997.0], [19.0, 7037.0], [19.1, 7037.0], [19.2, 7037.0], [19.3, 7037.0], [19.4, 7037.0], [19.5, 7037.0], [19.6, 7037.0], [19.7, 7037.0], [19.8, 7037.0], [19.9, 7037.0], [20.0, 7042.0], [20.1, 7042.0], [20.2, 7042.0], [20.3, 7042.0], [20.4, 7042.0], [20.5, 7042.0], [20.6, 7042.0], [20.7, 7042.0], [20.8, 7042.0], [20.9, 7042.0], [21.0, 7054.0], [21.1, 7054.0], [21.2, 7054.0], [21.3, 7054.0], [21.4, 7054.0], [21.5, 7054.0], [21.6, 7054.0], [21.7, 7054.0], [21.8, 7054.0], [21.9, 7054.0], [22.0, 7086.0], [22.1, 7086.0], [22.2, 7086.0], [22.3, 7086.0], [22.4, 7086.0], [22.5, 7086.0], [22.6, 7086.0], [22.7, 7086.0], [22.8, 7086.0], [22.9, 7086.0], [23.0, 7214.0], [23.1, 7214.0], [23.2, 7214.0], [23.3, 7214.0], [23.4, 7214.0], [23.5, 7214.0], [23.6, 7214.0], [23.7, 7214.0], [23.8, 7214.0], [23.9, 7214.0], [24.0, 7303.0], [24.1, 7303.0], [24.2, 7303.0], [24.3, 7303.0], [24.4, 7303.0], [24.5, 7303.0], [24.6, 7303.0], [24.7, 7303.0], [24.8, 7303.0], [24.9, 7303.0], [25.0, 7387.0], [25.1, 7387.0], [25.2, 7387.0], [25.3, 7387.0], [25.4, 7387.0], [25.5, 7387.0], [25.6, 7387.0], [25.7, 7387.0], [25.8, 7387.0], [25.9, 7387.0], [26.0, 7402.0], [26.1, 7402.0], [26.2, 7402.0], [26.3, 7402.0], [26.4, 7402.0], [26.5, 7402.0], [26.6, 7402.0], [26.7, 7402.0], [26.8, 7402.0], [26.9, 7402.0], [27.0, 7448.0], [27.1, 7448.0], [27.2, 7448.0], [27.3, 7448.0], [27.4, 7448.0], [27.5, 7448.0], [27.6, 7448.0], [27.7, 7448.0], [27.8, 7448.0], [27.9, 7448.0], [28.0, 7535.0], [28.1, 7535.0], [28.2, 7535.0], [28.3, 7535.0], [28.4, 7535.0], [28.5, 7535.0], [28.6, 7535.0], [28.7, 7535.0], [28.8, 7535.0], [28.9, 7535.0], [29.0, 7539.0], [29.1, 7539.0], [29.2, 7539.0], [29.3, 7539.0], [29.4, 7539.0], [29.5, 7539.0], [29.6, 7539.0], [29.7, 7539.0], [29.8, 7539.0], [29.9, 7539.0], [30.0, 7572.0], [30.1, 7572.0], [30.2, 7572.0], [30.3, 7572.0], [30.4, 7572.0], [30.5, 7572.0], [30.6, 7572.0], [30.7, 7572.0], [30.8, 7572.0], [30.9, 7572.0], [31.0, 7634.0], [31.1, 7634.0], [31.2, 7634.0], [31.3, 7634.0], [31.4, 7634.0], [31.5, 7634.0], [31.6, 7634.0], [31.7, 7634.0], [31.8, 7634.0], [31.9, 7634.0], [32.0, 7724.0], [32.1, 7724.0], [32.2, 7724.0], [32.3, 7724.0], [32.4, 7724.0], [32.5, 7724.0], [32.6, 7724.0], [32.7, 7724.0], [32.8, 7724.0], [32.9, 7724.0], [33.0, 7781.0], [33.1, 7781.0], [33.2, 7781.0], [33.3, 7781.0], [33.4, 7781.0], [33.5, 7781.0], [33.6, 7781.0], [33.7, 7781.0], [33.8, 7781.0], [33.9, 7781.0], [34.0, 8027.0], [34.1, 8027.0], [34.2, 8027.0], [34.3, 8027.0], [34.4, 8027.0], [34.5, 8027.0], [34.6, 8027.0], [34.7, 8027.0], [34.8, 8027.0], [34.9, 8027.0], [35.0, 8102.0], [35.1, 8102.0], [35.2, 8102.0], [35.3, 8102.0], [35.4, 8102.0], [35.5, 8102.0], [35.6, 8102.0], [35.7, 8102.0], [35.8, 8102.0], [35.9, 8102.0], [36.0, 8173.0], [36.1, 8173.0], [36.2, 8173.0], [36.3, 8173.0], [36.4, 8173.0], [36.5, 8173.0], [36.6, 8173.0], [36.7, 8173.0], [36.8, 8173.0], [36.9, 8173.0], [37.0, 8213.0], [37.1, 8213.0], [37.2, 8213.0], [37.3, 8213.0], [37.4, 8213.0], [37.5, 8213.0], [37.6, 8213.0], [37.7, 8213.0], [37.8, 8213.0], [37.9, 8213.0], [38.0, 8214.0], [38.1, 8214.0], [38.2, 8214.0], [38.3, 8214.0], [38.4, 8214.0], [38.5, 8214.0], [38.6, 8214.0], [38.7, 8214.0], [38.8, 8214.0], [38.9, 8214.0], [39.0, 8313.0], [39.1, 8313.0], [39.2, 8313.0], [39.3, 8313.0], [39.4, 8313.0], [39.5, 8313.0], [39.6, 8313.0], [39.7, 8313.0], [39.8, 8313.0], [39.9, 8313.0], [40.0, 8314.0], [40.1, 8314.0], [40.2, 8314.0], [40.3, 8314.0], [40.4, 8314.0], [40.5, 8314.0], [40.6, 8314.0], [40.7, 8314.0], [40.8, 8314.0], [40.9, 8314.0], [41.0, 8365.0], [41.1, 8365.0], [41.2, 8365.0], [41.3, 8365.0], [41.4, 8365.0], [41.5, 8365.0], [41.6, 8365.0], [41.7, 8365.0], [41.8, 8365.0], [41.9, 8365.0], [42.0, 8446.0], [42.1, 8446.0], [42.2, 8446.0], [42.3, 8446.0], [42.4, 8446.0], [42.5, 8446.0], [42.6, 8446.0], [42.7, 8446.0], [42.8, 8446.0], [42.9, 8446.0], [43.0, 8484.0], [43.1, 8484.0], [43.2, 8484.0], [43.3, 8484.0], [43.4, 8484.0], [43.5, 8484.0], [43.6, 8484.0], [43.7, 8484.0], [43.8, 8484.0], [43.9, 8484.0], [44.0, 8538.0], [44.1, 8538.0], [44.2, 8538.0], [44.3, 8538.0], [44.4, 8538.0], [44.5, 8538.0], [44.6, 8538.0], [44.7, 8538.0], [44.8, 8538.0], [44.9, 8538.0], [45.0, 8707.0], [45.1, 8707.0], [45.2, 8707.0], [45.3, 8707.0], [45.4, 8707.0], [45.5, 8707.0], [45.6, 8707.0], [45.7, 8707.0], [45.8, 8707.0], [45.9, 8707.0], [46.0, 8708.0], [46.1, 8708.0], [46.2, 8708.0], [46.3, 8708.0], [46.4, 8708.0], [46.5, 8708.0], [46.6, 8708.0], [46.7, 8708.0], [46.8, 8708.0], [46.9, 8708.0], [47.0, 8798.0], [47.1, 8798.0], [47.2, 8798.0], [47.3, 8798.0], [47.4, 8798.0], [47.5, 8798.0], [47.6, 8798.0], [47.7, 8798.0], [47.8, 8798.0], [47.9, 8798.0], [48.0, 8813.0], [48.1, 8813.0], [48.2, 8813.0], [48.3, 8813.0], [48.4, 8813.0], [48.5, 8813.0], [48.6, 8813.0], [48.7, 8813.0], [48.8, 8813.0], [48.9, 8813.0], [49.0, 8834.0], [49.1, 8834.0], [49.2, 8834.0], [49.3, 8834.0], [49.4, 8834.0], [49.5, 8834.0], [49.6, 8834.0], [49.7, 8834.0], [49.8, 8834.0], [49.9, 8834.0], [50.0, 8892.0], [50.1, 8892.0], [50.2, 8892.0], [50.3, 8892.0], [50.4, 8892.0], [50.5, 8892.0], [50.6, 8892.0], [50.7, 8892.0], [50.8, 8892.0], [50.9, 8892.0], [51.0, 9146.0], [51.1, 9146.0], [51.2, 9146.0], [51.3, 9146.0], [51.4, 9146.0], [51.5, 9146.0], [51.6, 9146.0], [51.7, 9146.0], [51.8, 9146.0], [51.9, 9146.0], [52.0, 9196.0], [52.1, 9196.0], [52.2, 9196.0], [52.3, 9196.0], [52.4, 9196.0], [52.5, 9196.0], [52.6, 9196.0], [52.7, 9196.0], [52.8, 9196.0], [52.9, 9196.0], [53.0, 9239.0], [53.1, 9239.0], [53.2, 9239.0], [53.3, 9239.0], [53.4, 9239.0], [53.5, 9239.0], [53.6, 9239.0], [53.7, 9239.0], [53.8, 9239.0], [53.9, 9239.0], [54.0, 9241.0], [54.1, 9241.0], [54.2, 9241.0], [54.3, 9241.0], [54.4, 9241.0], [54.5, 9241.0], [54.6, 9241.0], [54.7, 9241.0], [54.8, 9241.0], [54.9, 9241.0], [55.0, 9394.0], [55.1, 9394.0], [55.2, 9394.0], [55.3, 9394.0], [55.4, 9394.0], [55.5, 9394.0], [55.6, 9394.0], [55.7, 9394.0], [55.8, 9394.0], [55.9, 9394.0], [56.0, 9444.0], [56.1, 9444.0], [56.2, 9444.0], [56.3, 9444.0], [56.4, 9444.0], [56.5, 9444.0], [56.6, 9444.0], [56.7, 9444.0], [56.8, 9444.0], [56.9, 9444.0], [57.0, 9516.0], [57.1, 9516.0], [57.2, 9516.0], [57.3, 9516.0], [57.4, 9516.0], [57.5, 9516.0], [57.6, 9516.0], [57.7, 9516.0], [57.8, 9516.0], [57.9, 9516.0], [58.0, 9555.0], [58.1, 9555.0], [58.2, 9555.0], [58.3, 9555.0], [58.4, 9555.0], [58.5, 9555.0], [58.6, 9555.0], [58.7, 9555.0], [58.8, 9555.0], [58.9, 9555.0], [59.0, 9600.0], [59.1, 9600.0], [59.2, 9600.0], [59.3, 9600.0], [59.4, 9600.0], [59.5, 9600.0], [59.6, 9600.0], [59.7, 9600.0], [59.8, 9600.0], [59.9, 9600.0], [60.0, 9605.0], [60.1, 9605.0], [60.2, 9605.0], [60.3, 9605.0], [60.4, 9605.0], [60.5, 9605.0], [60.6, 9605.0], [60.7, 9605.0], [60.8, 9605.0], [60.9, 9605.0], [61.0, 9654.0], [61.1, 9654.0], [61.2, 9654.0], [61.3, 9654.0], [61.4, 9654.0], [61.5, 9654.0], [61.6, 9654.0], [61.7, 9654.0], [61.8, 9654.0], [61.9, 9654.0], [62.0, 9735.0], [62.1, 9735.0], [62.2, 9735.0], [62.3, 9735.0], [62.4, 9735.0], [62.5, 9735.0], [62.6, 9735.0], [62.7, 9735.0], [62.8, 9735.0], [62.9, 9735.0], [63.0, 9888.0], [63.1, 9888.0], [63.2, 9888.0], [63.3, 9888.0], [63.4, 9888.0], [63.5, 9888.0], [63.6, 9888.0], [63.7, 9888.0], [63.8, 9888.0], [63.9, 9888.0], [64.0, 10300.0], [64.1, 10300.0], [64.2, 10300.0], [64.3, 10300.0], [64.4, 10300.0], [64.5, 10300.0], [64.6, 10300.0], [64.7, 10300.0], [64.8, 10300.0], [64.9, 10300.0], [65.0, 10340.0], [65.1, 10340.0], [65.2, 10340.0], [65.3, 10340.0], [65.4, 10340.0], [65.5, 10340.0], [65.6, 10340.0], [65.7, 10340.0], [65.8, 10340.0], [65.9, 10340.0], [66.0, 10382.0], [66.1, 10382.0], [66.2, 10382.0], [66.3, 10382.0], [66.4, 10382.0], [66.5, 10382.0], [66.6, 10382.0], [66.7, 10382.0], [66.8, 10382.0], [66.9, 10382.0], [67.0, 10499.0], [67.1, 10499.0], [67.2, 10499.0], [67.3, 10499.0], [67.4, 10499.0], [67.5, 10499.0], [67.6, 10499.0], [67.7, 10499.0], [67.8, 10499.0], [67.9, 10499.0], [68.0, 10545.0], [68.1, 10545.0], [68.2, 10545.0], [68.3, 10545.0], [68.4, 10545.0], [68.5, 10545.0], [68.6, 10545.0], [68.7, 10545.0], [68.8, 10545.0], [68.9, 10545.0], [69.0, 10566.0], [69.1, 10566.0], [69.2, 10566.0], [69.3, 10566.0], [69.4, 10566.0], [69.5, 10566.0], [69.6, 10566.0], [69.7, 10566.0], [69.8, 10566.0], [69.9, 10566.0], [70.0, 10590.0], [70.1, 10590.0], [70.2, 10590.0], [70.3, 10590.0], [70.4, 10590.0], [70.5, 10590.0], [70.6, 10590.0], [70.7, 10590.0], [70.8, 10590.0], [70.9, 10590.0], [71.0, 10765.0], [71.1, 10765.0], [71.2, 10765.0], [71.3, 10765.0], [71.4, 10765.0], [71.5, 10765.0], [71.6, 10765.0], [71.7, 10765.0], [71.8, 10765.0], [71.9, 10765.0], [72.0, 10827.0], [72.1, 10827.0], [72.2, 10827.0], [72.3, 10827.0], [72.4, 10827.0], [72.5, 10827.0], [72.6, 10827.0], [72.7, 10827.0], [72.8, 10827.0], [72.9, 10827.0], [73.0, 10903.0], [73.1, 10903.0], [73.2, 10903.0], [73.3, 10903.0], [73.4, 10903.0], [73.5, 10903.0], [73.6, 10903.0], [73.7, 10903.0], [73.8, 10903.0], [73.9, 10903.0], [74.0, 10955.0], [74.1, 10955.0], [74.2, 10955.0], [74.3, 10955.0], [74.4, 10955.0], [74.5, 10955.0], [74.6, 10955.0], [74.7, 10955.0], [74.8, 10955.0], [74.9, 10955.0], [75.0, 11147.0], [75.1, 11147.0], [75.2, 11147.0], [75.3, 11147.0], [75.4, 11147.0], [75.5, 11147.0], [75.6, 11147.0], [75.7, 11147.0], [75.8, 11147.0], [75.9, 11147.0], [76.0, 11149.0], [76.1, 11149.0], [76.2, 11149.0], [76.3, 11149.0], [76.4, 11149.0], [76.5, 11149.0], [76.6, 11149.0], [76.7, 11149.0], [76.8, 11149.0], [76.9, 11149.0], [77.0, 11192.0], [77.1, 11192.0], [77.2, 11192.0], [77.3, 11192.0], [77.4, 11192.0], [77.5, 11192.0], [77.6, 11192.0], [77.7, 11192.0], [77.8, 11192.0], [77.9, 11192.0], [78.0, 11201.0], [78.1, 11201.0], [78.2, 11201.0], [78.3, 11201.0], [78.4, 11201.0], [78.5, 11201.0], [78.6, 11201.0], [78.7, 11201.0], [78.8, 11201.0], [78.9, 11201.0], [79.0, 11225.0], [79.1, 11225.0], [79.2, 11225.0], [79.3, 11225.0], [79.4, 11225.0], [79.5, 11225.0], [79.6, 11225.0], [79.7, 11225.0], [79.8, 11225.0], [79.9, 11225.0], [80.0, 11227.0], [80.1, 11227.0], [80.2, 11227.0], [80.3, 11227.0], [80.4, 11227.0], [80.5, 11227.0], [80.6, 11227.0], [80.7, 11227.0], [80.8, 11227.0], [80.9, 11227.0], [81.0, 11250.0], [81.1, 11250.0], [81.2, 11250.0], [81.3, 11250.0], [81.4, 11250.0], [81.5, 11250.0], [81.6, 11250.0], [81.7, 11250.0], [81.8, 11250.0], [81.9, 11250.0], [82.0, 11535.0], [82.1, 11535.0], [82.2, 11535.0], [82.3, 11535.0], [82.4, 11535.0], [82.5, 11535.0], [82.6, 11535.0], [82.7, 11535.0], [82.8, 11535.0], [82.9, 11535.0], [83.0, 11545.0], [83.1, 11545.0], [83.2, 11545.0], [83.3, 11545.0], [83.4, 11545.0], [83.5, 11545.0], [83.6, 11545.0], [83.7, 11545.0], [83.8, 11545.0], [83.9, 11545.0], [84.0, 11656.0], [84.1, 11656.0], [84.2, 11656.0], [84.3, 11656.0], [84.4, 11656.0], [84.5, 11656.0], [84.6, 11656.0], [84.7, 11656.0], [84.8, 11656.0], [84.9, 11656.0], [85.0, 11862.0], [85.1, 11862.0], [85.2, 11862.0], [85.3, 11862.0], [85.4, 11862.0], [85.5, 11862.0], [85.6, 11862.0], [85.7, 11862.0], [85.8, 11862.0], [85.9, 11862.0], [86.0, 11928.0], [86.1, 11928.0], [86.2, 11928.0], [86.3, 11928.0], [86.4, 11928.0], [86.5, 11928.0], [86.6, 11928.0], [86.7, 11928.0], [86.8, 11928.0], [86.9, 11928.0], [87.0, 12186.0], [87.1, 12186.0], [87.2, 12186.0], [87.3, 12186.0], [87.4, 12186.0], [87.5, 12186.0], [87.6, 12186.0], [87.7, 12186.0], [87.8, 12186.0], [87.9, 12186.0], [88.0, 12326.0], [88.1, 12326.0], [88.2, 12326.0], [88.3, 12326.0], [88.4, 12326.0], [88.5, 12326.0], [88.6, 12326.0], [88.7, 12326.0], [88.8, 12326.0], [88.9, 12326.0], [89.0, 12379.0], [89.1, 12379.0], [89.2, 12379.0], [89.3, 12379.0], [89.4, 12379.0], [89.5, 12379.0], [89.6, 12379.0], [89.7, 12379.0], [89.8, 12379.0], [89.9, 12379.0], [90.0, 12646.0], [90.1, 12646.0], [90.2, 12646.0], [90.3, 12646.0], [90.4, 12646.0], [90.5, 12646.0], [90.6, 12646.0], [90.7, 12646.0], [90.8, 12646.0], [90.9, 12646.0], [91.0, 12771.0], [91.1, 12771.0], [91.2, 12771.0], [91.3, 12771.0], [91.4, 12771.0], [91.5, 12771.0], [91.6, 12771.0], [91.7, 12771.0], [91.8, 12771.0], [91.9, 12771.0], [92.0, 12903.0], [92.1, 12903.0], [92.2, 12903.0], [92.3, 12903.0], [92.4, 12903.0], [92.5, 12903.0], [92.6, 12903.0], [92.7, 12903.0], [92.8, 12903.0], [92.9, 12903.0], [93.0, 13207.0], [93.1, 13207.0], [93.2, 13207.0], [93.3, 13207.0], [93.4, 13207.0], [93.5, 13207.0], [93.6, 13207.0], [93.7, 13207.0], [93.8, 13207.0], [93.9, 13207.0], [94.0, 13228.0], [94.1, 13228.0], [94.2, 13228.0], [94.3, 13228.0], [94.4, 13228.0], [94.5, 13228.0], [94.6, 13228.0], [94.7, 13228.0], [94.8, 13228.0], [94.9, 13228.0], [95.0, 13426.0], [95.1, 13426.0], [95.2, 13426.0], [95.3, 13426.0], [95.4, 13426.0], [95.5, 13426.0], [95.6, 13426.0], [95.7, 13426.0], [95.8, 13426.0], [95.9, 13426.0], [96.0, 13565.0], [96.1, 13565.0], [96.2, 13565.0], [96.3, 13565.0], [96.4, 13565.0], [96.5, 13565.0], [96.6, 13565.0], [96.7, 13565.0], [96.8, 13565.0], [96.9, 13565.0], [97.0, 13753.0], [97.1, 13753.0], [97.2, 13753.0], [97.3, 13753.0], [97.4, 13753.0], [97.5, 13753.0], [97.6, 13753.0], [97.7, 13753.0], [97.8, 13753.0], [97.9, 13753.0], [98.0, 14275.0], [98.1, 14275.0], [98.2, 14275.0], [98.3, 14275.0], [98.4, 14275.0], [98.5, 14275.0], [98.6, 14275.0], [98.7, 14275.0], [98.8, 14275.0], [98.9, 14275.0], [99.0, 21059.0], [99.1, 21059.0], [99.2, 21059.0], [99.3, 21059.0], [99.4, 21059.0], [99.5, 21059.0], [99.6, 21059.0], [99.7, 21059.0], [99.8, 21059.0], [99.9, 21059.0]], "isOverall": false, "label": "services", "isController": false}, {"data": [[0.0, 6386.0], [0.1, 6386.0], [0.2, 6386.0], [0.3, 6386.0], [0.4, 6386.0], [0.5, 6386.0], [0.6, 6386.0], [0.7, 6386.0], [0.8, 6386.0], [0.9, 6386.0], [1.0, 6804.0], [1.1, 6804.0], [1.2, 6804.0], [1.3, 6804.0], [1.4, 6804.0], [1.5, 6804.0], [1.6, 6804.0], [1.7, 6804.0], [1.8, 6804.0], [1.9, 6804.0], [2.0, 7172.0], [2.1, 7172.0], [2.2, 7172.0], [2.3, 7172.0], [2.4, 7172.0], [2.5, 7172.0], [2.6, 7172.0], [2.7, 7172.0], [2.8, 7172.0], [2.9, 7172.0], [3.0, 7233.0], [3.1, 7233.0], [3.2, 7233.0], [3.3, 7233.0], [3.4, 7233.0], [3.5, 7233.0], [3.6, 7233.0], [3.7, 7233.0], [3.8, 7233.0], [3.9, 7233.0], [4.0, 7415.0], [4.1, 7415.0], [4.2, 7415.0], [4.3, 7415.0], [4.4, 7415.0], [4.5, 7415.0], [4.6, 7415.0], [4.7, 7415.0], [4.8, 7415.0], [4.9, 7415.0], [5.0, 7441.0], [5.1, 7441.0], [5.2, 7441.0], [5.3, 7441.0], [5.4, 7441.0], [5.5, 7441.0], [5.6, 7441.0], [5.7, 7441.0], [5.8, 7441.0], [5.9, 7441.0], [6.0, 7817.0], [6.1, 7817.0], [6.2, 7817.0], [6.3, 7817.0], [6.4, 7817.0], [6.5, 7817.0], [6.6, 7817.0], [6.7, 7817.0], [6.8, 7817.0], [6.9, 7817.0], [7.0, 7905.0], [7.1, 7905.0], [7.2, 7905.0], [7.3, 7905.0], [7.4, 7905.0], [7.5, 7905.0], [7.6, 7905.0], [7.7, 7905.0], [7.8, 7905.0], [7.9, 7905.0], [8.0, 7925.0], [8.1, 7925.0], [8.2, 7925.0], [8.3, 7925.0], [8.4, 7925.0], [8.5, 7925.0], [8.6, 7925.0], [8.7, 7925.0], [8.8, 7925.0], [8.9, 7925.0], [9.0, 7991.0], [9.1, 7991.0], [9.2, 7991.0], [9.3, 7991.0], [9.4, 7991.0], [9.5, 7991.0], [9.6, 7991.0], [9.7, 7991.0], [9.8, 7991.0], [9.9, 7991.0], [10.0, 8092.0], [10.1, 8092.0], [10.2, 8092.0], [10.3, 8092.0], [10.4, 8092.0], [10.5, 8092.0], [10.6, 8092.0], [10.7, 8092.0], [10.8, 8092.0], [10.9, 8092.0], [11.0, 8103.0], [11.1, 8103.0], [11.2, 8103.0], [11.3, 8103.0], [11.4, 8103.0], [11.5, 8103.0], [11.6, 8103.0], [11.7, 8103.0], [11.8, 8103.0], [11.9, 8103.0], [12.0, 8314.0], [12.1, 8314.0], [12.2, 8314.0], [12.3, 8314.0], [12.4, 8314.0], [12.5, 8314.0], [12.6, 8314.0], [12.7, 8314.0], [12.8, 8314.0], [12.9, 8314.0], [13.0, 8370.0], [13.1, 8370.0], [13.2, 8370.0], [13.3, 8370.0], [13.4, 8370.0], [13.5, 8370.0], [13.6, 8370.0], [13.7, 8370.0], [13.8, 8370.0], [13.9, 8370.0], [14.0, 8453.0], [14.1, 8453.0], [14.2, 8453.0], [14.3, 8453.0], [14.4, 8453.0], [14.5, 8453.0], [14.6, 8453.0], [14.7, 8453.0], [14.8, 8453.0], [14.9, 8453.0], [15.0, 8477.0], [15.1, 8477.0], [15.2, 8477.0], [15.3, 8477.0], [15.4, 8477.0], [15.5, 8477.0], [15.6, 8477.0], [15.7, 8477.0], [15.8, 8477.0], [15.9, 8477.0], [16.0, 8485.0], [16.1, 8485.0], [16.2, 8485.0], [16.3, 8485.0], [16.4, 8485.0], [16.5, 8485.0], [16.6, 8485.0], [16.7, 8485.0], [16.8, 8485.0], [16.9, 8485.0], [17.0, 8807.0], [17.1, 8807.0], [17.2, 8807.0], [17.3, 8807.0], [17.4, 8807.0], [17.5, 8807.0], [17.6, 8807.0], [17.7, 8807.0], [17.8, 8807.0], [17.9, 8807.0], [18.0, 8875.0], [18.1, 8875.0], [18.2, 8875.0], [18.3, 8875.0], [18.4, 8875.0], [18.5, 8875.0], [18.6, 8875.0], [18.7, 8875.0], [18.8, 8875.0], [18.9, 8875.0], [19.0, 9153.0], [19.1, 9153.0], [19.2, 9153.0], [19.3, 9153.0], [19.4, 9153.0], [19.5, 9153.0], [19.6, 9153.0], [19.7, 9153.0], [19.8, 9153.0], [19.9, 9153.0], [20.0, 9604.0], [20.1, 9604.0], [20.2, 9604.0], [20.3, 9604.0], [20.4, 9604.0], [20.5, 9604.0], [20.6, 9604.0], [20.7, 9604.0], [20.8, 9604.0], [20.9, 9604.0], [21.0, 10015.0], [21.1, 10015.0], [21.2, 10015.0], [21.3, 10015.0], [21.4, 10015.0], [21.5, 10015.0], [21.6, 10015.0], [21.7, 10015.0], [21.8, 10015.0], [21.9, 10015.0], [22.0, 10119.0], [22.1, 10119.0], [22.2, 10119.0], [22.3, 10119.0], [22.4, 10119.0], [22.5, 10119.0], [22.6, 10119.0], [22.7, 10119.0], [22.8, 10119.0], [22.9, 10119.0], [23.0, 10138.0], [23.1, 10138.0], [23.2, 10138.0], [23.3, 10138.0], [23.4, 10138.0], [23.5, 10138.0], [23.6, 10138.0], [23.7, 10138.0], [23.8, 10138.0], [23.9, 10138.0], [24.0, 10239.0], [24.1, 10239.0], [24.2, 10239.0], [24.3, 10239.0], [24.4, 10239.0], [24.5, 10239.0], [24.6, 10239.0], [24.7, 10239.0], [24.8, 10239.0], [24.9, 10239.0], [25.0, 10346.0], [25.1, 10346.0], [25.2, 10346.0], [25.3, 10346.0], [25.4, 10346.0], [25.5, 10346.0], [25.6, 10346.0], [25.7, 10346.0], [25.8, 10346.0], [25.9, 10346.0], [26.0, 10453.0], [26.1, 10453.0], [26.2, 10453.0], [26.3, 10453.0], [26.4, 10453.0], [26.5, 10453.0], [26.6, 10453.0], [26.7, 10453.0], [26.8, 10453.0], [26.9, 10453.0], [27.0, 10598.0], [27.1, 10598.0], [27.2, 10598.0], [27.3, 10598.0], [27.4, 10598.0], [27.5, 10598.0], [27.6, 10598.0], [27.7, 10598.0], [27.8, 10598.0], [27.9, 10598.0], [28.0, 10683.0], [28.1, 10683.0], [28.2, 10683.0], [28.3, 10683.0], [28.4, 10683.0], [28.5, 10683.0], [28.6, 10683.0], [28.7, 10683.0], [28.8, 10683.0], [28.9, 10683.0], [29.0, 11056.0], [29.1, 11056.0], [29.2, 11056.0], [29.3, 11056.0], [29.4, 11056.0], [29.5, 11056.0], [29.6, 11056.0], [29.7, 11056.0], [29.8, 11056.0], [29.9, 11056.0], [30.0, 11213.0], [30.1, 11213.0], [30.2, 11213.0], [30.3, 11213.0], [30.4, 11213.0], [30.5, 11213.0], [30.6, 11213.0], [30.7, 11213.0], [30.8, 11213.0], [30.9, 11213.0], [31.0, 11242.0], [31.1, 11242.0], [31.2, 11242.0], [31.3, 11242.0], [31.4, 11242.0], [31.5, 11242.0], [31.6, 11242.0], [31.7, 11242.0], [31.8, 11242.0], [31.9, 11242.0], [32.0, 11387.0], [32.1, 11387.0], [32.2, 11387.0], [32.3, 11387.0], [32.4, 11387.0], [32.5, 11387.0], [32.6, 11387.0], [32.7, 11387.0], [32.8, 11387.0], [32.9, 11387.0], [33.0, 11628.0], [33.1, 11628.0], [33.2, 11628.0], [33.3, 11628.0], [33.4, 11628.0], [33.5, 11628.0], [33.6, 11628.0], [33.7, 11628.0], [33.8, 11628.0], [33.9, 11628.0], [34.0, 11987.0], [34.1, 11987.0], [34.2, 11987.0], [34.3, 11987.0], [34.4, 11987.0], [34.5, 11987.0], [34.6, 11987.0], [34.7, 11987.0], [34.8, 11987.0], [34.9, 11987.0], [35.0, 12000.0], [35.1, 12000.0], [35.2, 12000.0], [35.3, 12000.0], [35.4, 12000.0], [35.5, 12000.0], [35.6, 12000.0], [35.7, 12000.0], [35.8, 12000.0], [35.9, 12000.0], [36.0, 12043.0], [36.1, 12043.0], [36.2, 12043.0], [36.3, 12043.0], [36.4, 12043.0], [36.5, 12043.0], [36.6, 12043.0], [36.7, 12043.0], [36.8, 12043.0], [36.9, 12043.0], [37.0, 12053.0], [37.1, 12053.0], [37.2, 12053.0], [37.3, 12053.0], [37.4, 12053.0], [37.5, 12053.0], [37.6, 12053.0], [37.7, 12053.0], [37.8, 12053.0], [37.9, 12053.0], [38.0, 12164.0], [38.1, 12164.0], [38.2, 12164.0], [38.3, 12164.0], [38.4, 12164.0], [38.5, 12164.0], [38.6, 12164.0], [38.7, 12164.0], [38.8, 12164.0], [38.9, 12164.0], [39.0, 12296.0], [39.1, 12296.0], [39.2, 12296.0], [39.3, 12296.0], [39.4, 12296.0], [39.5, 12296.0], [39.6, 12296.0], [39.7, 12296.0], [39.8, 12296.0], [39.9, 12296.0], [40.0, 12326.0], [40.1, 12326.0], [40.2, 12326.0], [40.3, 12326.0], [40.4, 12326.0], [40.5, 12326.0], [40.6, 12326.0], [40.7, 12326.0], [40.8, 12326.0], [40.9, 12326.0], [41.0, 12412.0], [41.1, 12412.0], [41.2, 12412.0], [41.3, 12412.0], [41.4, 12412.0], [41.5, 12412.0], [41.6, 12412.0], [41.7, 12412.0], [41.8, 12412.0], [41.9, 12412.0], [42.0, 12415.0], [42.1, 12415.0], [42.2, 12415.0], [42.3, 12415.0], [42.4, 12415.0], [42.5, 12415.0], [42.6, 12415.0], [42.7, 12415.0], [42.8, 12415.0], [42.9, 12415.0], [43.0, 12519.0], [43.1, 12519.0], [43.2, 12519.0], [43.3, 12519.0], [43.4, 12519.0], [43.5, 12519.0], [43.6, 12519.0], [43.7, 12519.0], [43.8, 12519.0], [43.9, 12519.0], [44.0, 12634.0], [44.1, 12634.0], [44.2, 12634.0], [44.3, 12634.0], [44.4, 12634.0], [44.5, 12634.0], [44.6, 12634.0], [44.7, 12634.0], [44.8, 12634.0], [44.9, 12634.0], [45.0, 12653.0], [45.1, 12653.0], [45.2, 12653.0], [45.3, 12653.0], [45.4, 12653.0], [45.5, 12653.0], [45.6, 12653.0], [45.7, 12653.0], [45.8, 12653.0], [45.9, 12653.0], [46.0, 12674.0], [46.1, 12674.0], [46.2, 12674.0], [46.3, 12674.0], [46.4, 12674.0], [46.5, 12674.0], [46.6, 12674.0], [46.7, 12674.0], [46.8, 12674.0], [46.9, 12674.0], [47.0, 12712.0], [47.1, 12712.0], [47.2, 12712.0], [47.3, 12712.0], [47.4, 12712.0], [47.5, 12712.0], [47.6, 12712.0], [47.7, 12712.0], [47.8, 12712.0], [47.9, 12712.0], [48.0, 12741.0], [48.1, 12741.0], [48.2, 12741.0], [48.3, 12741.0], [48.4, 12741.0], [48.5, 12741.0], [48.6, 12741.0], [48.7, 12741.0], [48.8, 12741.0], [48.9, 12741.0], [49.0, 12835.0], [49.1, 12835.0], [49.2, 12835.0], [49.3, 12835.0], [49.4, 12835.0], [49.5, 12835.0], [49.6, 12835.0], [49.7, 12835.0], [49.8, 12835.0], [49.9, 12835.0], [50.0, 13219.0], [50.1, 13219.0], [50.2, 13219.0], [50.3, 13219.0], [50.4, 13219.0], [50.5, 13219.0], [50.6, 13219.0], [50.7, 13219.0], [50.8, 13219.0], [50.9, 13219.0], [51.0, 13243.0], [51.1, 13243.0], [51.2, 13243.0], [51.3, 13243.0], [51.4, 13243.0], [51.5, 13243.0], [51.6, 13243.0], [51.7, 13243.0], [51.8, 13243.0], [51.9, 13243.0], [52.0, 13309.0], [52.1, 13309.0], [52.2, 13309.0], [52.3, 13309.0], [52.4, 13309.0], [52.5, 13309.0], [52.6, 13309.0], [52.7, 13309.0], [52.8, 13309.0], [52.9, 13309.0], [53.0, 13613.0], [53.1, 13613.0], [53.2, 13613.0], [53.3, 13613.0], [53.4, 13613.0], [53.5, 13613.0], [53.6, 13613.0], [53.7, 13613.0], [53.8, 13613.0], [53.9, 13613.0], [54.0, 13639.0], [54.1, 13639.0], [54.2, 13639.0], [54.3, 13639.0], [54.4, 13639.0], [54.5, 13639.0], [54.6, 13639.0], [54.7, 13639.0], [54.8, 13639.0], [54.9, 13639.0], [55.0, 13664.0], [55.1, 13664.0], [55.2, 13664.0], [55.3, 13664.0], [55.4, 13664.0], [55.5, 13664.0], [55.6, 13664.0], [55.7, 13664.0], [55.8, 13664.0], [55.9, 13664.0], [56.0, 13900.0], [56.1, 13900.0], [56.2, 13900.0], [56.3, 13900.0], [56.4, 13900.0], [56.5, 13900.0], [56.6, 13900.0], [56.7, 13900.0], [56.8, 13900.0], [56.9, 13900.0], [57.0, 13909.0], [57.1, 13909.0], [57.2, 13909.0], [57.3, 13909.0], [57.4, 13909.0], [57.5, 13909.0], [57.6, 13909.0], [57.7, 13909.0], [57.8, 13909.0], [57.9, 13909.0], [58.0, 14300.0], [58.1, 14300.0], [58.2, 14300.0], [58.3, 14300.0], [58.4, 14300.0], [58.5, 14300.0], [58.6, 14300.0], [58.7, 14300.0], [58.8, 14300.0], [58.9, 14300.0], [59.0, 14598.0], [59.1, 14598.0], [59.2, 14598.0], [59.3, 14598.0], [59.4, 14598.0], [59.5, 14598.0], [59.6, 14598.0], [59.7, 14598.0], [59.8, 14598.0], [59.9, 14598.0], [60.0, 14842.0], [60.1, 14842.0], [60.2, 14842.0], [60.3, 14842.0], [60.4, 14842.0], [60.5, 14842.0], [60.6, 14842.0], [60.7, 14842.0], [60.8, 14842.0], [60.9, 14842.0], [61.0, 15205.0], [61.1, 15205.0], [61.2, 15205.0], [61.3, 15205.0], [61.4, 15205.0], [61.5, 15205.0], [61.6, 15205.0], [61.7, 15205.0], [61.8, 15205.0], [61.9, 15205.0], [62.0, 15247.0], [62.1, 15247.0], [62.2, 15247.0], [62.3, 15247.0], [62.4, 15247.0], [62.5, 15247.0], [62.6, 15247.0], [62.7, 15247.0], [62.8, 15247.0], [62.9, 15247.0], [63.0, 15792.0], [63.1, 15792.0], [63.2, 15792.0], [63.3, 15792.0], [63.4, 15792.0], [63.5, 15792.0], [63.6, 15792.0], [63.7, 15792.0], [63.8, 15792.0], [63.9, 15792.0], [64.0, 15828.0], [64.1, 15828.0], [64.2, 15828.0], [64.3, 15828.0], [64.4, 15828.0], [64.5, 15828.0], [64.6, 15828.0], [64.7, 15828.0], [64.8, 15828.0], [64.9, 15828.0], [65.0, 16068.0], [65.1, 16068.0], [65.2, 16068.0], [65.3, 16068.0], [65.4, 16068.0], [65.5, 16068.0], [65.6, 16068.0], [65.7, 16068.0], [65.8, 16068.0], [65.9, 16068.0], [66.0, 16108.0], [66.1, 16108.0], [66.2, 16108.0], [66.3, 16108.0], [66.4, 16108.0], [66.5, 16108.0], [66.6, 16108.0], [66.7, 16108.0], [66.8, 16108.0], [66.9, 16108.0], [67.0, 16123.0], [67.1, 16123.0], [67.2, 16123.0], [67.3, 16123.0], [67.4, 16123.0], [67.5, 16123.0], [67.6, 16123.0], [67.7, 16123.0], [67.8, 16123.0], [67.9, 16123.0], [68.0, 16154.0], [68.1, 16154.0], [68.2, 16154.0], [68.3, 16154.0], [68.4, 16154.0], [68.5, 16154.0], [68.6, 16154.0], [68.7, 16154.0], [68.8, 16154.0], [68.9, 16154.0], [69.0, 16217.0], [69.1, 16217.0], [69.2, 16217.0], [69.3, 16217.0], [69.4, 16217.0], [69.5, 16217.0], [69.6, 16217.0], [69.7, 16217.0], [69.8, 16217.0], [69.9, 16217.0], [70.0, 16223.0], [70.1, 16223.0], [70.2, 16223.0], [70.3, 16223.0], [70.4, 16223.0], [70.5, 16223.0], [70.6, 16223.0], [70.7, 16223.0], [70.8, 16223.0], [70.9, 16223.0], [71.0, 16231.0], [71.1, 16231.0], [71.2, 16231.0], [71.3, 16231.0], [71.4, 16231.0], [71.5, 16231.0], [71.6, 16231.0], [71.7, 16231.0], [71.8, 16231.0], [71.9, 16231.0], [72.0, 16588.0], [72.1, 16588.0], [72.2, 16588.0], [72.3, 16588.0], [72.4, 16588.0], [72.5, 16588.0], [72.6, 16588.0], [72.7, 16588.0], [72.8, 16588.0], [72.9, 16588.0], [73.0, 16688.0], [73.1, 16688.0], [73.2, 16688.0], [73.3, 16688.0], [73.4, 16688.0], [73.5, 16688.0], [73.6, 16688.0], [73.7, 16688.0], [73.8, 16688.0], [73.9, 16688.0], [74.0, 16720.0], [74.1, 16720.0], [74.2, 16720.0], [74.3, 16720.0], [74.4, 16720.0], [74.5, 16720.0], [74.6, 16720.0], [74.7, 16720.0], [74.8, 16720.0], [74.9, 16720.0], [75.0, 16924.0], [75.1, 16924.0], [75.2, 16924.0], [75.3, 16924.0], [75.4, 16924.0], [75.5, 16924.0], [75.6, 16924.0], [75.7, 16924.0], [75.8, 16924.0], [75.9, 16924.0], [76.0, 17028.0], [76.1, 17028.0], [76.2, 17028.0], [76.3, 17028.0], [76.4, 17028.0], [76.5, 17028.0], [76.6, 17028.0], [76.7, 17028.0], [76.8, 17028.0], [76.9, 17028.0], [77.0, 17069.0], [77.1, 17069.0], [77.2, 17069.0], [77.3, 17069.0], [77.4, 17069.0], [77.5, 17069.0], [77.6, 17069.0], [77.7, 17069.0], [77.8, 17069.0], [77.9, 17069.0], [78.0, 17271.0], [78.1, 17271.0], [78.2, 17271.0], [78.3, 17271.0], [78.4, 17271.0], [78.5, 17271.0], [78.6, 17271.0], [78.7, 17271.0], [78.8, 17271.0], [78.9, 17271.0], [79.0, 17412.0], [79.1, 17412.0], [79.2, 17412.0], [79.3, 17412.0], [79.4, 17412.0], [79.5, 17412.0], [79.6, 17412.0], [79.7, 17412.0], [79.8, 17412.0], [79.9, 17412.0], [80.0, 17490.0], [80.1, 17490.0], [80.2, 17490.0], [80.3, 17490.0], [80.4, 17490.0], [80.5, 17490.0], [80.6, 17490.0], [80.7, 17490.0], [80.8, 17490.0], [80.9, 17490.0], [81.0, 17561.0], [81.1, 17561.0], [81.2, 17561.0], [81.3, 17561.0], [81.4, 17561.0], [81.5, 17561.0], [81.6, 17561.0], [81.7, 17561.0], [81.8, 17561.0], [81.9, 17561.0], [82.0, 17661.0], [82.1, 17661.0], [82.2, 17661.0], [82.3, 17661.0], [82.4, 17661.0], [82.5, 17661.0], [82.6, 17661.0], [82.7, 17661.0], [82.8, 17661.0], [82.9, 17661.0], [83.0, 17789.0], [83.1, 17789.0], [83.2, 17789.0], [83.3, 17789.0], [83.4, 17789.0], [83.5, 17789.0], [83.6, 17789.0], [83.7, 17789.0], [83.8, 17789.0], [83.9, 17789.0], [84.0, 18004.0], [84.1, 18004.0], [84.2, 18004.0], [84.3, 18004.0], [84.4, 18004.0], [84.5, 18004.0], [84.6, 18004.0], [84.7, 18004.0], [84.8, 18004.0], [84.9, 18004.0], [85.0, 18135.0], [85.1, 18135.0], [85.2, 18135.0], [85.3, 18135.0], [85.4, 18135.0], [85.5, 18135.0], [85.6, 18135.0], [85.7, 18135.0], [85.8, 18135.0], [85.9, 18135.0], [86.0, 18148.0], [86.1, 18148.0], [86.2, 18148.0], [86.3, 18148.0], [86.4, 18148.0], [86.5, 18148.0], [86.6, 18148.0], [86.7, 18148.0], [86.8, 18148.0], [86.9, 18148.0], [87.0, 18229.0], [87.1, 18229.0], [87.2, 18229.0], [87.3, 18229.0], [87.4, 18229.0], [87.5, 18229.0], [87.6, 18229.0], [87.7, 18229.0], [87.8, 18229.0], [87.9, 18229.0], [88.0, 18681.0], [88.1, 18681.0], [88.2, 18681.0], [88.3, 18681.0], [88.4, 18681.0], [88.5, 18681.0], [88.6, 18681.0], [88.7, 18681.0], [88.8, 18681.0], [88.9, 18681.0], [89.0, 18844.0], [89.1, 18844.0], [89.2, 18844.0], [89.3, 18844.0], [89.4, 18844.0], [89.5, 18844.0], [89.6, 18844.0], [89.7, 18844.0], [89.8, 18844.0], [89.9, 18844.0], [90.0, 18852.0], [90.1, 18852.0], [90.2, 18852.0], [90.3, 18852.0], [90.4, 18852.0], [90.5, 18852.0], [90.6, 18852.0], [90.7, 18852.0], [90.8, 18852.0], [90.9, 18852.0], [91.0, 18954.0], [91.1, 18954.0], [91.2, 18954.0], [91.3, 18954.0], [91.4, 18954.0], [91.5, 18954.0], [91.6, 18954.0], [91.7, 18954.0], [91.8, 18954.0], [91.9, 18954.0], [92.0, 19185.0], [92.1, 19185.0], [92.2, 19185.0], [92.3, 19185.0], [92.4, 19185.0], [92.5, 19185.0], [92.6, 19185.0], [92.7, 19185.0], [92.8, 19185.0], [92.9, 19185.0], [93.0, 19670.0], [93.1, 19670.0], [93.2, 19670.0], [93.3, 19670.0], [93.4, 19670.0], [93.5, 19670.0], [93.6, 19670.0], [93.7, 19670.0], [93.8, 19670.0], [93.9, 19670.0], [94.0, 19682.0], [94.1, 19682.0], [94.2, 19682.0], [94.3, 19682.0], [94.4, 19682.0], [94.5, 19682.0], [94.6, 19682.0], [94.7, 19682.0], [94.8, 19682.0], [94.9, 19682.0], [95.0, 19743.0], [95.1, 19743.0], [95.2, 19743.0], [95.3, 19743.0], [95.4, 19743.0], [95.5, 19743.0], [95.6, 19743.0], [95.7, 19743.0], [95.8, 19743.0], [95.9, 19743.0], [96.0, 19777.0], [96.1, 19777.0], [96.2, 19777.0], [96.3, 19777.0], [96.4, 19777.0], [96.5, 19777.0], [96.6, 19777.0], [96.7, 19777.0], [96.8, 19777.0], [96.9, 19777.0], [97.0, 19961.0], [97.1, 19961.0], [97.2, 19961.0], [97.3, 19961.0], [97.4, 19961.0], [97.5, 19961.0], [97.6, 19961.0], [97.7, 19961.0], [97.8, 19961.0], [97.9, 19961.0], [98.0, 20014.0], [98.1, 20014.0], [98.2, 20014.0], [98.3, 20014.0], [98.4, 20014.0], [98.5, 20014.0], [98.6, 20014.0], [98.7, 20014.0], [98.8, 20014.0], [98.9, 20014.0], [99.0, 20691.0], [99.1, 20691.0], [99.2, 20691.0], [99.3, 20691.0], [99.4, 20691.0], [99.5, 20691.0], [99.6, 20691.0], [99.7, 20691.0], [99.8, 20691.0], [99.9, 20691.0]], "isOverall": false, "label": "products", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 3000.0, "maxY": 21.0, "series": [{"data": [[17700.0, 1.0], [19100.0, 1.0], [19600.0, 1.0], [20400.0, 1.0], [21400.0, 1.0], [21200.0, 1.0], [22200.0, 2.0], [22500.0, 1.0], [21700.0, 1.0], [22000.0, 3.0], [22100.0, 1.0], [22800.0, 1.0], [23100.0, 1.0], [23300.0, 1.0], [24400.0, 1.0], [23700.0, 1.0], [24500.0, 1.0], [24700.0, 2.0], [25200.0, 1.0], [25400.0, 1.0], [25900.0, 1.0], [26600.0, 1.0], [26700.0, 1.0], [27300.0, 1.0], [27200.0, 2.0], [27500.0, 1.0], [28400.0, 1.0], [28300.0, 1.0], [27900.0, 1.0], [28200.0, 1.0], [28700.0, 2.0], [29200.0, 1.0], [30600.0, 2.0], [29900.0, 1.0], [30200.0, 1.0], [31300.0, 3.0], [31600.0, 1.0], [31200.0, 2.0], [31900.0, 1.0], [32600.0, 1.0], [32000.0, 1.0], [32700.0, 1.0], [33700.0, 3.0], [32900.0, 1.0], [33600.0, 1.0], [33500.0, 1.0], [34300.0, 1.0], [33300.0, 1.0], [33800.0, 1.0], [34000.0, 1.0], [34100.0, 1.0], [34800.0, 1.0], [35700.0, 1.0], [35500.0, 1.0], [36100.0, 1.0], [35200.0, 1.0], [36600.0, 2.0], [36900.0, 1.0], [37800.0, 1.0], [37900.0, 1.0], [38500.0, 1.0], [37600.0, 1.0], [38800.0, 1.0], [38200.0, 1.0], [39000.0, 2.0], [39100.0, 1.0], [39500.0, 1.0], [40200.0, 3.0], [40700.0, 2.0], [39700.0, 1.0], [40500.0, 2.0], [39900.0, 2.0], [39800.0, 1.0], [40400.0, 1.0], [39400.0, 3.0], [41000.0, 1.0], [41100.0, 1.0], [41600.0, 1.0], [42000.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[9700.0, 1.0], [11500.0, 1.0], [3400.0, 3.0], [3500.0, 12.0], [3700.0, 11.0], [3600.0, 14.0], [3800.0, 4.0], [3900.0, 5.0], [4000.0, 2.0], [4200.0, 6.0], [4300.0, 3.0], [4100.0, 2.0], [4400.0, 3.0], [4600.0, 3.0], [4500.0, 2.0], [4700.0, 3.0], [4800.0, 1.0], [5100.0, 2.0], [4900.0, 1.0], [5000.0, 2.0], [5300.0, 1.0], [5500.0, 3.0], [5400.0, 2.0], [5600.0, 1.0], [5700.0, 1.0], [6100.0, 1.0], [6000.0, 1.0], [6400.0, 1.0], [6500.0, 1.0], [6600.0, 1.0], [6700.0, 1.0], [6800.0, 1.0], [6900.0, 1.0], [7200.0, 1.0], [7300.0, 1.0], [7700.0, 1.0]], "isOverall": false, "label": "contact", "isController": false}, {"data": [[8400.0, 1.0], [8200.0, 1.0], [3000.0, 1.0], [3400.0, 15.0], [3500.0, 21.0], [3600.0, 10.0], [3700.0, 3.0], [3800.0, 7.0], [3900.0, 2.0], [4000.0, 2.0], [4300.0, 2.0], [4200.0, 1.0], [4100.0, 1.0], [4400.0, 1.0], [4600.0, 1.0], [4700.0, 2.0], [4800.0, 2.0], [5100.0, 2.0], [4900.0, 1.0], [5300.0, 1.0], [5200.0, 1.0], [5500.0, 3.0], [5600.0, 2.0], [5700.0, 2.0], [5800.0, 3.0], [6000.0, 2.0], [6300.0, 1.0], [6600.0, 1.0], [6700.0, 1.0], [6800.0, 1.0], [7000.0, 1.0], [7300.0, 2.0], [7500.0, 1.0], [7600.0, 1.0], [7800.0, 1.0]], "isOverall": false, "label": "about", "isController": false}, {"data": [[3900.0, 1.0], [4600.0, 2.0], [6100.0, 1.0], [6000.0, 1.0], [6200.0, 1.0], [6300.0, 1.0], [6400.0, 3.0], [6600.0, 4.0], [6500.0, 2.0], [6900.0, 2.0], [6700.0, 1.0], [7000.0, 4.0], [7300.0, 2.0], [7200.0, 1.0], [7400.0, 2.0], [7500.0, 3.0], [7600.0, 1.0], [7700.0, 2.0], [8100.0, 2.0], [8000.0, 1.0], [8400.0, 2.0], [8700.0, 3.0], [8300.0, 3.0], [8500.0, 1.0], [8200.0, 2.0], [8800.0, 3.0], [9100.0, 2.0], [9200.0, 2.0], [9600.0, 3.0], [9300.0, 1.0], [9500.0, 2.0], [9400.0, 1.0], [9700.0, 1.0], [9800.0, 1.0], [10300.0, 3.0], [10400.0, 1.0], [10500.0, 3.0], [10700.0, 1.0], [11100.0, 3.0], [10900.0, 2.0], [11200.0, 4.0], [10800.0, 1.0], [11500.0, 2.0], [11600.0, 1.0], [11800.0, 1.0], [12100.0, 1.0], [11900.0, 1.0], [12300.0, 2.0], [12700.0, 1.0], [12600.0, 1.0], [13200.0, 2.0], [12900.0, 1.0], [13500.0, 1.0], [13400.0, 1.0], [13700.0, 1.0], [14200.0, 1.0], [21000.0, 1.0]], "isOverall": false, "label": "services", "isController": false}, {"data": [[6300.0, 1.0], [6800.0, 1.0], [7100.0, 1.0], [7400.0, 2.0], [7200.0, 1.0], [7900.0, 3.0], [7800.0, 1.0], [8000.0, 1.0], [8100.0, 1.0], [8400.0, 3.0], [8300.0, 2.0], [8800.0, 2.0], [9100.0, 1.0], [9600.0, 1.0], [10100.0, 2.0], [10000.0, 1.0], [10200.0, 1.0], [10400.0, 1.0], [10600.0, 1.0], [10500.0, 1.0], [10300.0, 1.0], [11000.0, 1.0], [11200.0, 2.0], [11600.0, 1.0], [11300.0, 1.0], [12000.0, 3.0], [12200.0, 1.0], [11900.0, 1.0], [12100.0, 1.0], [12600.0, 3.0], [12400.0, 2.0], [12300.0, 1.0], [12500.0, 1.0], [12700.0, 2.0], [13200.0, 2.0], [13300.0, 1.0], [12800.0, 1.0], [13600.0, 3.0], [13900.0, 2.0], [14300.0, 1.0], [14800.0, 1.0], [14500.0, 1.0], [15200.0, 2.0], [15800.0, 1.0], [15700.0, 1.0], [16100.0, 3.0], [16200.0, 3.0], [16000.0, 1.0], [16700.0, 1.0], [16500.0, 1.0], [16600.0, 1.0], [17200.0, 1.0], [17400.0, 2.0], [17000.0, 2.0], [16900.0, 1.0], [17600.0, 1.0], [17700.0, 1.0], [17500.0, 1.0], [18100.0, 2.0], [18000.0, 1.0], [18200.0, 1.0], [18600.0, 1.0], [18800.0, 2.0], [18900.0, 1.0], [19100.0, 1.0], [19700.0, 2.0], [19600.0, 2.0], [19900.0, 1.0], [20000.0, 1.0], [20600.0, 1.0]], "isOverall": false, "label": "products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 42000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 399.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 399.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 50.53999999999999, "minX": 1.7376564E12, "maxY": 100.0, "series": [{"data": [[1.73765646E12, 74.90862944162434], [1.73765658E12, 100.0], [1.7376564E12, 99.97087378640776], [1.73765652E12, 100.0], [1.73765664E12, 50.53999999999999]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73765664E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 3483.0, "minX": 1.0, "maxY": 42054.0, "series": [{"data": [[2.0, 40763.0], [3.0, 41612.0], [4.0, 41163.0], [5.0, 41053.0], [6.0, 39806.0], [7.0, 40245.0], [8.0, 40259.0], [9.0, 40777.0], [10.0, 39407.0], [11.0, 39999.0], [12.0, 39487.0], [14.0, 40018.5], [16.0, 40197.5], [17.0, 40556.0], [18.0, 39053.0], [19.0, 39767.0], [20.0, 40227.0], [21.0, 38274.0], [22.0, 39595.0], [23.0, 39100.0], [25.0, 38945.5], [26.0, 37630.0], [27.0, 38509.0], [28.0, 37962.0], [29.0, 37854.0], [30.0, 36988.0], [31.0, 36634.0], [33.0, 35298.0], [32.0, 36633.0], [35.0, 35552.0], [34.0, 36138.0], [37.0, 35764.0], [36.0, 34162.0], [39.0, 34022.0], [38.0, 34822.0], [41.0, 33829.0], [40.0, 33750.0], [43.0, 33331.0], [42.0, 33790.0], [45.0, 33527.0], [44.0, 34383.0], [47.0, 33694.0], [46.0, 33710.0], [49.0, 32912.0], [48.0, 32769.0], [51.0, 31289.0], [50.0, 32038.0], [53.0, 32645.0], [52.0, 31233.0], [55.0, 31341.0], [54.0, 31984.0], [57.0, 31345.0], [56.0, 30210.0], [59.0, 29977.0], [58.0, 31695.0], [61.0, 30603.0], [60.0, 30669.0], [63.0, 28706.0], [62.0, 31308.0], [67.0, 28710.0], [66.0, 27516.0], [65.0, 28238.0], [64.0, 29259.0], [71.0, 27214.0], [70.0, 28445.0], [69.0, 28380.0], [68.0, 27953.0], [75.0, 26753.0], [74.0, 26642.0], [73.0, 27359.0], [72.0, 27218.0], [79.0, 25989.0], [78.0, 24551.0], [77.0, 25208.0], [76.0, 25493.0], [83.0, 23303.0], [82.0, 24586.0], [80.0, 23707.0], [87.0, 23129.0], [86.0, 22152.0], [85.0, 22058.0], [84.0, 24725.0], [91.0, 21710.0], [90.0, 22019.0], [89.0, 22868.0], [88.0, 22035.0], [95.0, 22210.0], [94.0, 22254.0], [93.0, 21293.0], [92.0, 22560.0], [99.0, 19151.0], [98.0, 19646.0], [97.0, 21410.0], [96.0, 20483.0], [100.0, 17700.0], [1.0, 42054.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[50.53999999999999, 31787.390000000003]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 5693.0], [3.0, 9739.0], [4.0, 11553.0], [5.0, 6048.0], [6.0, 6656.0], [7.0, 3761.0], [8.0, 6951.0], [9.0, 4819.0], [10.0, 6866.0], [11.0, 3782.0], [12.0, 4341.0], [14.0, 7493.5], [16.0, 5466.0], [17.0, 6773.0], [18.0, 4704.0], [19.0, 6523.0], [20.0, 4542.0], [21.0, 3978.0], [22.0, 4211.0], [23.0, 6447.0], [25.0, 5203.0], [26.0, 4582.0], [27.0, 4669.0], [28.0, 4660.0], [29.0, 4696.0], [30.0, 5158.0], [31.0, 4471.0], [33.0, 4076.0], [32.0, 4187.0], [35.0, 4776.0], [34.0, 5006.0], [37.0, 4362.0], [36.0, 4966.0], [39.0, 5503.0], [38.0, 3915.0], [41.0, 4221.0], [40.0, 4297.0], [43.0, 4177.0], [42.0, 4473.0], [45.0, 4481.0], [44.0, 4225.0], [47.0, 4313.0], [46.0, 4206.0], [49.0, 3941.0], [48.0, 3918.0], [51.0, 3650.0], [50.0, 3683.0], [53.0, 3657.0], [52.0, 3653.0], [55.0, 3687.0], [54.0, 3608.0], [57.0, 3803.0], [56.0, 3781.0], [59.0, 3772.0], [58.0, 3815.0], [61.0, 3737.0], [60.0, 3751.0], [63.0, 3627.0], [62.0, 3676.0], [67.0, 3490.0], [66.0, 3550.0], [65.0, 3602.0], [64.0, 3520.0], [71.0, 6110.0], [70.0, 3483.0], [69.0, 5498.0], [68.0, 3577.0], [75.0, 3516.0], [74.0, 4774.0], [73.0, 3506.0], [72.0, 3495.0], [79.0, 5164.0], [78.0, 5536.0], [77.0, 5754.0], [76.0, 4226.0], [83.0, 4051.0], [82.0, 3778.5], [80.0, 3551.0], [87.0, 3705.0], [86.0, 3554.0], [85.0, 3694.0], [84.0, 3870.0], [91.0, 3551.0], [90.0, 3666.0], [89.0, 3748.0], [88.0, 3665.0], [95.0, 3659.0], [94.0, 3572.0], [93.0, 3905.0], [92.0, 3551.0], [99.0, 3599.0], [98.0, 3538.0], [97.0, 3719.0], [96.0, 3671.0], [100.0, 3774.0], [1.0, 7342.0]], "isOverall": false, "label": "contact", "isController": false}, {"data": [[50.53999999999999, 4566.340000000001]], "isOverall": false, "label": "contact-Aggregated", "isController": false}, {"data": [[100.0, 4484.990000000001]], "isOverall": false, "label": "about", "isController": false}, {"data": [[100.0, 4484.990000000001]], "isOverall": false, "label": "about-Aggregated", "isController": false}, {"data": [[100.0, 9269.999999999998]], "isOverall": false, "label": "services", "isController": false}, {"data": [[100.0, 9269.999999999998]], "isOverall": false, "label": "services-Aggregated", "isController": false}, {"data": [[100.0, 13466.060000000001]], "isOverall": false, "label": "products", "isController": false}, {"data": [[100.0, 13466.060000000001]], "isOverall": false, "label": "products-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 348.26666666666665, "minX": 1.7376564E12, "maxY": 317696.3333333333, "series": [{"data": [[1.73765646E12, 317696.3333333333], [1.73765658E12, 196132.4], [1.7376564E12, 231059.76666666666], [1.73765652E12, 37364.45], [1.73765664E12, 299036.35]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73765646E12, 2159.85], [1.73765658E12, 1828.4], [1.7376564E12, 1016.6666666666666], [1.73765652E12, 348.26666666666665], [1.73765664E12, 2180.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73765664E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3586.8125000000005, "minX": 1.7376564E12, "maxY": 32188.061855670105, "series": [{"data": [[1.73765646E12, 32188.061855670105], [1.7376564E12, 18832.333333333332]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.73765664E12, 4566.340000000001]], "isOverall": false, "label": "contact", "isController": false}, {"data": [[1.73765658E12, 4656.07142857143], [1.73765652E12, 3586.8125000000005]], "isOverall": false, "label": "about", "isController": false}, {"data": [[1.73765646E12, 9269.999999999998]], "isOverall": false, "label": "services", "isController": false}, {"data": [[1.7376564E12, 13466.060000000001]], "isOverall": false, "label": "products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73765664E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1436.25, "minX": 1.7376564E12, "maxY": 18450.15463917525, "series": [{"data": [[1.73765646E12, 18450.15463917525], [1.7376564E12, 10679.666666666666]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.73765664E12, 1694.93]], "isOverall": false, "label": "contact", "isController": false}, {"data": [[1.73765658E12, 2361.77380952381], [1.73765652E12, 1436.25]], "isOverall": false, "label": "about", "isController": false}, {"data": [[1.73765646E12, 3515.4599999999996]], "isOverall": false, "label": "services", "isController": false}, {"data": [[1.7376564E12, 10792.959999999997]], "isOverall": false, "label": "products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73765664E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 611.8125, "minX": 1.7376564E12, "maxY": 4886.597938144329, "series": [{"data": [[1.73765646E12, 4886.597938144329], [1.7376564E12, 3725.6666666666665]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.73765664E12, 650.6200000000002]], "isOverall": false, "label": "contact", "isController": false}, {"data": [[1.73765658E12, 614.9642857142859], [1.73765652E12, 611.8125]], "isOverall": false, "label": "about", "isController": false}, {"data": [[1.73765646E12, 895.91]], "isOverall": false, "label": "services", "isController": false}, {"data": [[1.7376564E12, 2690.7799999999997]], "isOverall": false, "label": "products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73765664E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3099.0, "minX": 1.7376564E12, "maxY": 20691.0, "series": [{"data": [[1.73765646E12, 14275.0], [1.73765658E12, 8402.0], [1.7376564E12, 20691.0], [1.73765652E12, 4394.0], [1.73765664E12, 11553.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73765646E12, 12379.0], [1.73765658E12, 6969.0], [1.7376564E12, 18851.2], [1.73765652E12, 3864.1000000000004], [1.73765664E12, 6515.400000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73765646E12, 14275.0], [1.73765658E12, 8402.0], [1.7376564E12, 20684.229999999996], [1.73765652E12, 4394.0], [1.73765664E12, 11534.859999999991]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73765646E12, 13228.0], [1.73765658E12, 7606.0], [1.7376564E12, 19739.95], [1.73765652E12, 4394.0], [1.73765664E12, 7191.349999999997]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.73765646E12, 3985.0], [1.73765658E12, 3099.0], [1.7376564E12, 6386.0], [1.73765652E12, 3458.0], [1.73765664E12, 3483.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73765646E12, 8834.0], [1.73765658E12, 3886.0], [1.7376564E12, 13027.0], [1.73765652E12, 3539.0], [1.73765664E12, 4063.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73765664E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3774.0, "minX": 1.0, "maxY": 21059.0, "series": [{"data": [[2.0, 4131.5], [8.0, 3838.5], [9.0, 12043.0], [10.0, 5721.5], [12.0, 12596.5], [3.0, 7037.0], [13.0, 8484.5], [15.0, 14772.5], [1.0, 3774.0], [4.0, 4839.0], [5.0, 3910.0], [6.0, 6444.5], [7.0, 7019.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 21059.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 15.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 10096.5, "series": [{"data": [[2.0, 1549.0], [8.0, 1769.0], [9.0, 9458.0], [10.0, 2814.0], [12.0, 10096.5], [3.0, 3208.0], [13.0, 5300.0], [15.0, 8824.5], [1.0, 1572.0], [4.0, 2189.0], [5.0, 1550.5], [6.0, 3521.0], [7.0, 3640.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 15.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.7376564E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.73765646E12, 1.6666666666666667], [1.73765658E12, 1.2], [1.7376564E12, 1.6666666666666667], [1.73765652E12, 0.4666666666666667], [1.73765664E12, 1.6666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73765664E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.7376564E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.73765646E12, 1.65], [1.73765658E12, 1.4], [1.7376564E12, 1.6666666666666667], [1.73765652E12, 0.26666666666666666], [1.73765664E12, 1.6666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.73765646E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73765664E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.7376564E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.73765646E12, 1.6], [1.7376564E12, 0.05]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.7376564E12, 1.6666666666666667]], "isOverall": false, "label": "products-success", "isController": false}, {"data": [[1.73765646E12, 0.016666666666666666]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.73765646E12, 1.65]], "isOverall": false, "label": "services-success", "isController": false}, {"data": [[1.73765646E12, 0.016666666666666666]], "isOverall": false, "label": "services-failure", "isController": false}, {"data": [[1.73765664E12, 1.6666666666666667]], "isOverall": false, "label": "contact-success", "isController": false}, {"data": [[1.73765658E12, 1.4], [1.73765652E12, 0.26666666666666666]], "isOverall": false, "label": "about-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73765664E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.7376564E12, "maxY": 3.25, "series": [{"data": [[1.73765646E12, 3.25], [1.73765658E12, 1.4], [1.7376564E12, 1.7166666666666666], [1.73765652E12, 0.26666666666666666], [1.73765664E12, 1.6666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.73765646E12, 0.03333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73765664E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

